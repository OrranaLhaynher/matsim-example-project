2019-09-10 16:04:15,587  INFO Gbl:59 JVM: 1.8.0_211; Oracle Corporation; mixed mode; 64-bit
2019-09-10 16:04:15,587  INFO Gbl:63 OS: Windows 10; 10.0; amd64
2019-09-10 16:04:15,588  INFO Gbl:66 CPU cores: 4
2019-09-10 16:04:15,588  INFO Gbl:67 max. Memory: 3556.0MB (3728736256B)
2019-09-10 16:04:15,589  INFO Gbl:105 MATSim-Build: r2e52cf1f54a31596d20f378d536f9dd7a0a860bb (2018-08-25 22:17:05)
2019-09-10 16:04:15,594  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2019-09-10 16:04:15,604  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:04:15,613 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:15,616  INFO NetworkImpl:167  node # 1
2019-09-10 16:04:15,619  INFO NetworkImpl:167  node # 4
2019-09-10 16:04:15,620  INFO NetworkImpl:167  node # 16
2019-09-10 16:04:15,620  INFO NetworkImpl:167  node # 64
2019-09-10 16:04:15,621  INFO NetworkImpl:167  node # 256
2019-09-10 16:04:15,624  INFO NetworkImpl:167  node # 1024
2019-09-10 16:04:15,632  INFO NetworkImpl:167  node # 4096
2019-09-10 16:04:15,645  INFO NetworkImpl:167  node # 16384
2019-09-10 16:04:15,659  INFO NetworkImpl:163  link # 1
2019-09-10 16:04:15,660  INFO NetworkImpl:163  link # 4
2019-09-10 16:04:15,664  INFO NetworkImpl:163  link # 16
2019-09-10 16:04:15,667  INFO NetworkImpl:163  link # 64
2019-09-10 16:04:15,677  INFO NetworkImpl:163  link # 256
2019-09-10 16:04:15,689  INFO NetworkImpl:163  link # 1024
2019-09-10 16:04:15,714  INFO NetworkImpl:163  link # 4096
2019-09-10 16:04:15,764  INFO NetworkImpl:163  link # 16384
2019-09-10 16:04:15,860  INFO NetworkImpl:163  link # 65536
2019-09-10 16:04:15,922  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:04:15,922  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2019-09-10 16:04:15,922  INFO ControlerUtils:58 config dump before iterations start
2019-09-10 16:04:15,922  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/California/]
2019-09-10 16:04:15,954  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="5" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="./output" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="EPSG:3311" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="shelter" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="07:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="population.xml.gz" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="00:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2019-09-10 16:04:15,969  INFO ControlerUtils:63 Complete config dump done.
2019-09-10 16:04:15,969  INFO ControlerUtils:64 Checking consistency of config...
2019-09-10 16:04:15,969  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2019-09-10 16:04:15,969  INFO ControlerUtils:66 Checking consistency of config done.
2019-09-10 16:04:16,032 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:16,078 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:16,141  INFO NetworkImpl:426 building QuadTree for nodes: xrange(-188353.30668997832,-82009.44110724259); yrange(110913.66792823048,244729.68631442077)
2019-09-10 16:04:16,203  INFO NetworkImpl:435 Building QuadTree took 0.093 seconds.
2019-09-10 16:04:17,484  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2019-09-10 16:04:17,485  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2019-09-10 16:04:17,524  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2019-09-10 16:04:17,596  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2019-09-10 16:04:17,683  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2019-09-10 16:04:17,821  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2019-09-10 16:04:18,259  INFO Counter:61 [PersonPrepareForSim] handled person # 64
2019-09-10 16:04:19,462  INFO Counter:61 [PersonPrepareForSim] handled person # 128
2019-09-10 16:04:21,390  INFO Counter:61 [PersonPrepareForSim] handled person # 256
2019-09-10 16:04:24,634  INFO Counter:61 [PersonPrepareForSim] handled person # 512
2019-09-10 16:04:32,805  INFO Counter:61 [PersonPrepareForSim] handled person # 1024
2019-09-10 16:04:43,873  INFO Counter:67 [PersonPrepareForSim] handled person # 1800
2019-09-10 16:04:43,873  INFO Counter:61  vehicles # 1
2019-09-10 16:04:43,873  INFO Counter:61  vehicles # 2
2019-09-10 16:04:43,873  INFO Counter:61  vehicles # 4
2019-09-10 16:04:43,873  INFO Counter:61  vehicles # 8
2019-09-10 16:04:43,874  INFO Counter:61  vehicles # 16
2019-09-10 16:04:43,874  INFO Counter:61  vehicles # 32
2019-09-10 16:04:43,874  INFO Counter:61  vehicles # 64
2019-09-10 16:04:43,875  INFO Counter:61  vehicles # 128
2019-09-10 16:04:43,876  INFO Counter:61  vehicles # 256
2019-09-10 16:04:43,878  INFO Counter:61  vehicles # 512
2019-09-10 16:04:43,882  INFO Counter:61  vehicles # 1024
2019-09-10 16:04:43,902  INFO AbstractController:126 ###################################################
2019-09-10 16:04:43,902  INFO AbstractController:127 ### ITERATION 0 BEGINS
2019-09-10 16:04:43,905  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:04:43,905  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:04:43,905  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:04:43,905  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:04:43,906  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:04:43,922  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2019-09-10 16:04:43,923  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:04:43,924  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:04:43,924  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:04:43,962  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:04:43,963  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:04:43,963  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:04:43,963  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:04:43,963  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:04:43,963  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:04:43,997  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:43,998  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:04:43,998  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:04:43,998  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:04:43,998  INFO EventsManagerImpl:156 
2019-09-10 16:04:43,998  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:43,998  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:04:43,998  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:04:43,998  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:04:43,999  INFO EventsManagerImpl:156 
2019-09-10 16:04:43,999  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:04:43,999  INFO PlansDumpingImpl:75 dumping plans...
2019-09-10 16:04:44,005  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-10 16:04:44,005  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-10 16:04:44,006  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-10 16:04:44,007  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-10 16:04:44,009  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-10 16:04:44,012  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-10 16:04:44,019  INFO Counter:61 [PopulationWriter] dumped person # 64
2019-09-10 16:04:44,029  INFO Counter:61 [PopulationWriter] dumped person # 128
2019-09-10 16:04:44,045  INFO Counter:61 [PopulationWriter] dumped person # 256
2019-09-10 16:04:44,072  INFO Counter:61 [PopulationWriter] dumped person # 512
2019-09-10 16:04:44,109  INFO Counter:61 [PopulationWriter] dumped person # 1024
2019-09-10 16:04:44,169  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.0/0.plans.xml.gz
2019-09-10 16:04:44,172  INFO Counter:67 [PopulationWriter] dumped person # 1800
2019-09-10 16:04:44,173  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-10 16:04:44,174  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:04:44,180  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2019-09-10 16:04:44,312  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:04:44,313  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:04:44,313  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:04:44,314  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:04:44,315  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:04:44,315  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:04:44,617  INFO Injector:80 === printInjector start ===
2019-09-10 16:04:44,617  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:04:44,619  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:04:44,620  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:04:44,620  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,620  INFO Injector:92 
2019-09-10 16:04:44,621  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:04:44,621  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6155d082}[Scopes.SINGLETON]
2019-09-10 16:04:44,622  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:04:44,622  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,623  INFO Injector:92 
2019-09-10 16:04:44,623  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:04:44,623  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@388526fb[Scopes.SINGLETON]}
2019-09-10 16:04:44,624  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:04:44,624  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:04:44,624  INFO Injector:92 
2019-09-10 16:04:44,626  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:04:44,627  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6436a7db[Scopes.SINGLETON]
2019-09-10 16:04:44,629  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:04:44,629  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,629  INFO Injector:92 
2019-09-10 16:04:44,630  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:04:44,630  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1afdd473[Scopes.SINGLETON]
2019-09-10 16:04:44,631  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:04:44,631  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,631  INFO Injector:92 
2019-09-10 16:04:44,632  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:04:44,632  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6a55299e[Scopes.SINGLETON]
2019-09-10 16:04:44,632  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:04:44,632  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,632  INFO Injector:92 
2019-09-10 16:04:44,632  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:04:44,633  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@289710d9[Scopes.SINGLETON]
2019-09-10 16:04:44,633  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:04:44,633  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,633  INFO Injector:92 
2019-09-10 16:04:44,634  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:04:44,634  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6995bf68[Scopes.SINGLETON]
2019-09-10 16:04:44,635  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:04:44,635  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,635  INFO Injector:92 
2019-09-10 16:04:44,635  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:04:44,636  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5b1ebf56[Scopes.SINGLETON]
2019-09-10 16:04:44,637  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:04:44,637  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,637  INFO Injector:92 
2019-09-10 16:04:44,637  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:04:44,639  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6fb365ed[Scopes.SINGLETON]
2019-09-10 16:04:44,639  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:04:44,640  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,640  INFO Injector:92 
2019-09-10 16:04:44,640  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:04:44,642  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@388526fb[Scopes.SINGLETON]
2019-09-10 16:04:44,642  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:04:44,642  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:44,643  INFO Injector:92 
2019-09-10 16:04:44,643  INFO Injector:95 === printInjector end ===
2019-09-10 16:04:44,643  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:04:44,644  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:04:44,644  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:04:44,645  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:04:44,773  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:04:44,795  INFO EventsManagerImpl:134  event # 1
2019-09-10 16:04:44,803  INFO EventsManagerImpl:134  event # 4
2019-09-10 16:04:44,805  INFO EventsManagerImpl:134  event # 16
2019-09-10 16:04:44,809  INFO EventsManagerImpl:134  event # 64
2019-09-10 16:04:44,815  INFO EventsManagerImpl:134  event # 256
2019-09-10 16:04:44,837  INFO EventsManagerImpl:134  event # 1024
2019-09-10 16:04:44,882  INFO EventsManagerImpl:134  event # 4096
2019-09-10 16:04:44,919  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:04:44,922  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:04:44,924  INFO Gbl:54 used RAM: 537753192B = 525149kB = 512MB  free: 518687128B = 494MB  total: 1056440320B = 1007MB
2019-09-10 16:04:45,071  INFO EventsManagerImpl:134  event # 16384
2019-09-10 16:04:45,674  INFO EventsManagerImpl:134  event # 65536
2019-09-10 16:04:45,817 ERROR BasicPlanAgentImpl:165 last activity of person driver agent id 545 has end time < infty; setting it to infty
2019-09-10 16:04:45,817 ERROR BasicPlanAgentImpl:166  This message given only once.
2019-09-10 16:04:47,006  INFO EventsManagerImpl:134  event # 262144
2019-09-10 16:04:48,311  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=225 #nodes=70
2019-09-10 16:04:48,312  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=961 lost=0 simT=3600.0s realT=4s; (s/r): 900.0
2019-09-10 16:04:48,312  INFO Gbl:54 used RAM: 609878928B = 595584kB = 581MB  free: 460717168B = 439MB  total: 1070596096B = 1021MB
2019-09-10 16:04:48,791  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:04:48,791  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=4s; (s/r): 1800.0
2019-09-10 16:04:48,791  INFO Gbl:54 used RAM: 653646008B = 638326kB = 623MB  free: 416950088B = 397MB  total: 1070596096B = 1021MB
2019-09-10 16:04:48,985  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.984375sec
2019-09-10 16:04:48,989  INFO AbstractController$8:215 ### ITERATION 0 fires after mobsim event
2019-09-10 16:04:48,989  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:04:48,995  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 3761 seconds = 01:02:41
2019-09-10 16:04:48,996  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:04:48,997  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:04:48,997  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:04:48,998  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:04:48,998  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:04:49,004  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:26][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:04:49,005  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:04:49,005  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:04:49,017  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2019-09-10 16:04:49,019  INFO AbstractController$4:152 ### ITERATION 0 fires scoring event
2019-09-10 16:04:49,019  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:04:49,026  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2019-09-10 16:04:49,029  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2019-09-10 16:04:49,030  INFO AbstractController$5:160 ### ITERATION 0 fires iteration end event
2019-09-10 16:04:49,031  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:04:49,034  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:49,035  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:49,035  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:04:49,038  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:04:49,038  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:04:49,047  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:04:49,047  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:04:49,048  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:04:49,048  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:04:49,048  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:04:49,048  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:04:49,049  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:04:49,051  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 38.35531179030058
2019-09-10 16:04:49,052  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.35531179030058
2019-09-10 16:04:49,052  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 38.35531179030058
2019-09-10 16:04:49,052  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 38.35531179030058
2019-09-10 16:04:49,053  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:04:49,055  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:04:49,062  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:04:49,063  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 50311.93900569391
2019-09-10 16:04:49,063  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:04:49,063  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:04:49,064  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:04:49,078  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:04:49,082  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:04:50,225  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:04:50,225  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2019-09-10 16:04:50,591  INFO AbstractController:170 ### ITERATION 0 ENDS
2019-09-10 16:04:50,591  INFO AbstractController:171 ###################################################
2019-09-10 16:04:50,592  INFO AbstractController:126 ###################################################
2019-09-10 16:04:50,592  INFO AbstractController:127 ### ITERATION 1 BEGINS
2019-09-10 16:04:50,594  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:04:50,594  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:04:50,594  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:04:50,595  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:04:50,596  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:04:50,601  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2019-09-10 16:04:50,602  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-10 16:04:50,603 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:50,604 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:50,612  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1611 plans handled. Strategy: BestPlanSelector
2019-09-10 16:04:50,612  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 189 plans
2019-09-10 16:04:50,674  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-10 16:04:50,737  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-10 16:04:50,764  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-10 16:04:50,835  INFO Counter:61 [PlanRouter] handled plan # 8
2019-09-10 16:04:50,991  INFO Counter:61 [PlanRouter] handled plan # 16
2019-09-10 16:04:51,408  INFO Counter:61 [PlanRouter] handled plan # 32
2019-09-10 16:04:51,894  INFO Counter:61 [PlanRouter] handled plan # 64
2019-09-10 16:04:53,072  INFO Counter:61 [PlanRouter] handled plan # 128
2019-09-10 16:04:54,046  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-10 16:04:54,046  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 189 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-10 16:04:54,047  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2019-09-10 16:04:54,047  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:04:54,048  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:04:54,048  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:04:54,085  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:04:54,085  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:04:54,086  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:04:54,086  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:04:54,087  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:04:54,087  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:04:54,109  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:54,109  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:04:54,109  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:04:54,109  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:04:54,109  INFO EventsManagerImpl:156 
2019-09-10 16:04:54,110  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:54,110  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:04:54,110  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:04:54,110  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:04:54,111  INFO EventsManagerImpl:156 
2019-09-10 16:04:54,111  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:04:54,111  INFO PlansDumpingImpl:75 dumping plans...
2019-09-10 16:04:54,115  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-10 16:04:54,118  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-10 16:04:54,119  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-10 16:04:54,121  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-10 16:04:54,127  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-10 16:04:54,132  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-10 16:04:54,139  INFO Counter:61 [PopulationWriter] dumped person # 64
2019-09-10 16:04:54,148  INFO Counter:61 [PopulationWriter] dumped person # 128
2019-09-10 16:04:54,163  INFO Counter:61 [PopulationWriter] dumped person # 256
2019-09-10 16:04:54,180  INFO Counter:61 [PopulationWriter] dumped person # 512
2019-09-10 16:04:54,209  INFO Counter:61 [PopulationWriter] dumped person # 1024
2019-09-10 16:04:54,282  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.1/1.plans.xml.gz
2019-09-10 16:04:54,285  INFO Counter:67 [PopulationWriter] dumped person # 1800
2019-09-10 16:04:54,285  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-10 16:04:54,285  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:04:54,289  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2019-09-10 16:04:54,311  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:04:54,311  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:04:54,312  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:04:54,312  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:04:54,313  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:04:54,314  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:04:54,479  INFO Injector:80 === printInjector start ===
2019-09-10 16:04:54,480  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:04:54,480  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:04:54,481  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:04:54,481  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,481  INFO Injector:92 
2019-09-10 16:04:54,481  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:04:54,482  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@15414fc}[Scopes.SINGLETON]
2019-09-10 16:04:54,482  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:04:54,482  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,483  INFO Injector:92 
2019-09-10 16:04:54,483  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:04:54,483  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6d250b04[Scopes.SINGLETON]}
2019-09-10 16:04:54,483  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:04:54,484  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:04:54,484  INFO Injector:92 
2019-09-10 16:04:54,484  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:04:54,486  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@146bfc15[Scopes.SINGLETON]
2019-09-10 16:04:54,487  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:04:54,487  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,487  INFO Injector:92 
2019-09-10 16:04:54,488  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:04:54,488  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2840aea6[Scopes.SINGLETON]
2019-09-10 16:04:54,488  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:04:54,488  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,489  INFO Injector:92 
2019-09-10 16:04:54,489  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:04:54,489  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2b317aa0[Scopes.SINGLETON]
2019-09-10 16:04:54,490  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:04:54,490  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,490  INFO Injector:92 
2019-09-10 16:04:54,490  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:04:54,491  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7ebde813[Scopes.SINGLETON]
2019-09-10 16:04:54,491  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:04:54,491  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,491  INFO Injector:92 
2019-09-10 16:04:54,492  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:04:54,492  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@465c9dc0[Scopes.SINGLETON]
2019-09-10 16:04:54,493  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:04:54,494  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,494  INFO Injector:92 
2019-09-10 16:04:54,494  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:04:54,494  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2d5eefb8[Scopes.SINGLETON]
2019-09-10 16:04:54,495  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:04:54,495  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,495  INFO Injector:92 
2019-09-10 16:04:54,496  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:04:54,496  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2bf94e3a[Scopes.SINGLETON]
2019-09-10 16:04:54,497  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:04:54,497  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,497  INFO Injector:92 
2019-09-10 16:04:54,498  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:04:54,499  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6d250b04[Scopes.SINGLETON]
2019-09-10 16:04:54,499  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:04:54,500  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:04:54,500  INFO Injector:92 
2019-09-10 16:04:54,500  INFO Injector:95 === printInjector end ===
2019-09-10 16:04:54,501  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:04:54,501  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:04:54,501  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:04:54,502  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:04:54,603  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:04:54,628  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:04:54,628  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:04:54,629  INFO Gbl:54 used RAM: 663169488B = 647626kB = 632MB  free: 424728112B = 405MB  total: 1087897600B = 1037MB
2019-09-10 16:04:56,973  INFO EventsManagerImpl:134  event # 1048576
2019-09-10 16:04:57,153  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=217 #nodes=72
2019-09-10 16:04:57,153  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=923 lost=0 simT=3600.0s realT=2s; (s/r): 1800.0
2019-09-10 16:04:57,154  INFO Gbl:54 used RAM: 724479448B = 707499kB = 690MB  free: 374952488B = 357MB  total: 1099431936B = 1048MB
2019-09-10 16:04:57,567  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:04:57,567  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=3s; (s/r): 2400.0
2019-09-10 16:04:57,568  INFO Gbl:54 used RAM: 764713152B = 746790kB = 729MB  free: 334718784B = 319MB  total: 1099431936B = 1048MB
2019-09-10 16:04:57,712  INFO AbstractController$8:215 ### ITERATION 1 fires after mobsim event
2019-09-10 16:04:57,712  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.40625sec
2019-09-10 16:04:57,713  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:04:57,744  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 3723 seconds = 01:02:03
2019-09-10 16:04:57,744  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:04:57,744  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:04:57,744  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:04:57,745  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:04:57,745  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:04:57,745  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:02][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:04:57,745  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:04:57,745  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:04:57,751  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2019-09-10 16:04:57,754  INFO AbstractController$4:152 ### ITERATION 1 fires scoring event
2019-09-10 16:04:57,754  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:04:57,757  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2019-09-10 16:04:57,761  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2019-09-10 16:04:57,761  INFO AbstractController$5:160 ### ITERATION 1 fires iteration end event
2019-09-10 16:04:57,762  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:04:57,764  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:57,765  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:04:57,765  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:04:57,767  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:04:57,768  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:04:57,778  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:04:57,783  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:04:57,784  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:04:57,784  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:04:57,784  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:04:57,785  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:04:57,935  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:04:57,937  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 38.69296519621479
2019-09-10 16:04:57,938  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.43420696412328
2019-09-10 16:04:57,938  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 38.56959123798343
2019-09-10 16:04:57,938  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 38.70497551184357
2019-09-10 16:04:58,113  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:04:58,113  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:04:58,116  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:04:58,116  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 50498.18499398306
2019-09-10 16:04:58,116  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:04:58,116  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:04:58,265  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:04:58,270  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:04:58,270  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:04:58,891  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:04:58,891  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2019-09-10 16:04:59,165  INFO AbstractController:170 ### ITERATION 1 ENDS
2019-09-10 16:04:59,165  INFO AbstractController:171 ###################################################
2019-09-10 16:04:59,165  INFO AbstractController:126 ###################################################
2019-09-10 16:04:59,166  INFO AbstractController:127 ### ITERATION 2 BEGINS
2019-09-10 16:04:59,168  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:04:59,168  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:04:59,168  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:04:59,168  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:04:59,169  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:04:59,173  INFO ControlerListenerManagerImpl:148 [it.2] all ControlerIterationStartsListeners called.
2019-09-10 16:04:59,173  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-10 16:04:59,174 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:59,175 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:04:59,180  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1619 plans handled. Strategy: BestPlanSelector
2019-09-10 16:04:59,180  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 181 plans
2019-09-10 16:04:59,219  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-10 16:04:59,241  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-10 16:04:59,293  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-10 16:04:59,385  INFO Counter:61 [PlanRouter] handled plan # 8
2019-09-10 16:04:59,570  INFO Counter:61 [PlanRouter] handled plan # 16
2019-09-10 16:04:59,928  INFO Counter:61 [PlanRouter] handled plan # 32
2019-09-10 16:05:00,384  INFO Counter:61 [PlanRouter] handled plan # 64
2019-09-10 16:05:01,322  INFO Counter:61 [PlanRouter] handled plan # 128
2019-09-10 16:05:02,263  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-10 16:05:02,263  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 181 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-10 16:05:02,263  INFO ControlerListenerManagerImpl:213 [it.2] all ControlerReplanningListeners called.
2019-09-10 16:05:02,263  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:02,263  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:05:02,263  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:05:02,295  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:05:02,296  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:05:02,296  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:05:02,296  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:05:02,296  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:05:02,296  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:05:02,298  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:02,298  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:02,299  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:02,299  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:02,299  INFO EventsManagerImpl:156 
2019-09-10 16:05:02,299  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:02,299  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:02,299  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:02,299  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:02,299  INFO EventsManagerImpl:156 
2019-09-10 16:05:02,299  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:05:02,299  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:05:02,301  INFO ControlerListenerManagerImpl:232 [it.2] all ControlerBeforeMobsimListeners called.
2019-09-10 16:05:02,308  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:02,308  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:02,308  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:05:02,308  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:05:02,309  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:05:02,309  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:05:02,433  INFO Injector:80 === printInjector start ===
2019-09-10 16:05:02,434  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:05:02,434  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:05:02,434  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:05:02,434  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,435  INFO Injector:92 
2019-09-10 16:05:02,435  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:05:02,435  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@465c3cb8}[Scopes.SINGLETON]
2019-09-10 16:05:02,435  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:05:02,436  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,436  INFO Injector:92 
2019-09-10 16:05:02,436  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:05:02,436  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@46e021d2[Scopes.SINGLETON]}
2019-09-10 16:05:02,436  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:05:02,436  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:05:02,437  INFO Injector:92 
2019-09-10 16:05:02,437  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:05:02,437  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1da4481c[Scopes.SINGLETON]
2019-09-10 16:05:02,437  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:05:02,438  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,438  INFO Injector:92 
2019-09-10 16:05:02,438  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:05:02,439  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@792bd8c8[Scopes.SINGLETON]
2019-09-10 16:05:02,439  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:05:02,439  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,439  INFO Injector:92 
2019-09-10 16:05:02,440  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:05:02,440  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7ae9d043[Scopes.SINGLETON]
2019-09-10 16:05:02,440  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:05:02,441  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,441  INFO Injector:92 
2019-09-10 16:05:02,441  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:05:02,442  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1c63ca6b[Scopes.SINGLETON]
2019-09-10 16:05:02,444  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:05:02,444  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,444  INFO Injector:92 
2019-09-10 16:05:02,445  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:05:02,446  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@329d3baf[Scopes.SINGLETON]
2019-09-10 16:05:02,446  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:05:02,447  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,447  INFO Injector:92 
2019-09-10 16:05:02,447  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:05:02,448  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@17072db4[Scopes.SINGLETON]
2019-09-10 16:05:02,448  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:05:02,448  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,448  INFO Injector:92 
2019-09-10 16:05:02,448  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:05:02,449  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@61173fbb[Scopes.SINGLETON]
2019-09-10 16:05:02,449  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:05:02,449  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,450  INFO Injector:92 
2019-09-10 16:05:02,450  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:05:02,452  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@46e021d2[Scopes.SINGLETON]
2019-09-10 16:05:02,452  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:05:02,453  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:02,453  INFO Injector:92 
2019-09-10 16:05:02,454  INFO Injector:95 === printInjector end ===
2019-09-10 16:05:02,454  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:02,456  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:02,456  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:05:02,456  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:05:02,534  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:05:02,554  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:05:02,554  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:05:02,555  INFO Gbl:54 used RAM: 711465536B = 694790kB = 678MB  free: 402122176B = 383MB  total: 1113587712B = 1062MB
2019-09-10 16:05:04,908  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=202 #nodes=67
2019-09-10 16:05:04,908  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=904 lost=0 simT=3600.0s realT=2s; (s/r): 1800.0
2019-09-10 16:05:04,908  INFO Gbl:54 used RAM: 768084544B = 750082kB = 732MB  free: 353367488B = 336MB  total: 1121452032B = 1069MB
2019-09-10 16:05:05,318  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:05:05,319  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=3s; (s/r): 2400.0
2019-09-10 16:05:05,319  INFO Gbl:54 used RAM: 805364384B = 786488kB = 768MB  free: 316087648B = 301MB  total: 1121452032B = 1069MB
2019-09-10 16:05:05,458  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.40625sec
2019-09-10 16:05:05,458  INFO AbstractController$8:215 ### ITERATION 2 fires after mobsim event
2019-09-10 16:05:05,459  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:05:05,510  INFO LegTimesControlerListener:50 [2] average trip (probably: leg) duration is: 3699 seconds = 01:01:39
2019-09-10 16:05:05,510  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:14][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:05:05,511  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:05:05,512  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:05:05,515  INFO ControlerListenerManagerImpl:251 [it.2] all ControlerAfterMobsimListeners called.
2019-09-10 16:05:05,515  INFO AbstractController$4:152 ### ITERATION 2 fires scoring event
2019-09-10 16:05:05,516  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:05,518  INFO NewScoreAssignerImpl:36 it: 2 msaStart: null
2019-09-10 16:05:05,521  INFO ControlerListenerManagerImpl:194 [it.2] all ControlerScoringListeners called.
2019-09-10 16:05:05,521  INFO AbstractController$5:160 ### ITERATION 2 fires iteration end event
2019-09-10 16:05:05,521  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:05,525  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:05,525  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:05,527  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:05,529  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:05:05,530  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:05:05,534  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:05:05,535  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:05:05,535  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:05:05,535  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:05:05,535  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:05:05,535  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:05:05,643  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:05:05,644  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 38.90530701405586
2019-09-10 16:05:05,644  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.47451242162558
2019-09-10 16:05:05,644  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 38.69990097177947
2019-09-10 16:05:05,644  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 38.92015035742031
2019-09-10 16:05:05,782  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:05:05,783  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:05:05,786  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:05:05,786  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 50602.57081847863
2019-09-10 16:05:05,786  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:05:05,786  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:05:05,877  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:05,882  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:05:05,882  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:05:06,169  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:06,169  INFO ControlerListenerManagerImpl:171 [it.2] all ControlerIterationEndsListeners called.
2019-09-10 16:05:06,313  INFO AbstractController:170 ### ITERATION 2 ENDS
2019-09-10 16:05:06,314  INFO AbstractController:171 ###################################################
2019-09-10 16:05:06,314  INFO AbstractController:126 ###################################################
2019-09-10 16:05:06,314  INFO AbstractController:127 ### ITERATION 3 BEGINS
2019-09-10 16:05:06,316  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:06,316  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:06,316  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:05:06,316  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:05:06,317  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:05:06,321  INFO ControlerListenerManagerImpl:148 [it.3] all ControlerIterationStartsListeners called.
2019-09-10 16:05:06,321  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-10 16:05:06,322 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:06,324 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:06,330  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1621 plans handled. Strategy: BestPlanSelector
2019-09-10 16:05:06,330  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 179 plans
2019-09-10 16:05:06,362  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-10 16:05:06,366  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-10 16:05:06,381  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-10 16:05:06,460  INFO Counter:61 [PlanRouter] handled plan # 8
2019-09-10 16:05:06,597  INFO Counter:61 [PlanRouter] handled plan # 16
2019-09-10 16:05:06,840  INFO Counter:61 [PlanRouter] handled plan # 32
2019-09-10 16:05:07,221  INFO Counter:61 [PlanRouter] handled plan # 64
2019-09-10 16:05:08,142  INFO Counter:61 [PlanRouter] handled plan # 128
2019-09-10 16:05:08,980  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-10 16:05:08,980  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 179 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-10 16:05:08,980  INFO ControlerListenerManagerImpl:213 [it.3] all ControlerReplanningListeners called.
2019-09-10 16:05:08,980  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:08,980  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:05:08,980  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:05:09,011  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:05:09,033  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:09,033  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:09,033  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:09,033  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:09,033  INFO EventsManagerImpl:156 
2019-09-10 16:05:09,033  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:09,033  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:09,033  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:09,033  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:09,033  INFO EventsManagerImpl:156 
2019-09-10 16:05:09,033  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:05:09,033  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:05:09,036  INFO ControlerListenerManagerImpl:232 [it.3] all ControlerBeforeMobsimListeners called.
2019-09-10 16:05:09,044  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:09,045  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:09,045  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:05:09,046  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:05:09,046  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:05:09,047  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:05:09,171  INFO Injector:80 === printInjector start ===
2019-09-10 16:05:09,171  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:05:09,171  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:05:09,172  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:05:09,172  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,172  INFO Injector:92 
2019-09-10 16:05:09,172  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:05:09,172  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@391d552a}[Scopes.SINGLETON]
2019-09-10 16:05:09,173  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:05:09,173  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,173  INFO Injector:92 
2019-09-10 16:05:09,173  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:05:09,174  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@44fe5876[Scopes.SINGLETON]}
2019-09-10 16:05:09,174  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:05:09,175  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:05:09,176  INFO Injector:92 
2019-09-10 16:05:09,177  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:05:09,178  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2982d3f6[Scopes.SINGLETON]
2019-09-10 16:05:09,179  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:05:09,179  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,179  INFO Injector:92 
2019-09-10 16:05:09,179  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:05:09,180  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@56d64dbf[Scopes.SINGLETON]
2019-09-10 16:05:09,180  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:05:09,180  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,181  INFO Injector:92 
2019-09-10 16:05:09,181  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:05:09,181  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6327f77c[Scopes.SINGLETON]
2019-09-10 16:05:09,181  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:05:09,181  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,182  INFO Injector:92 
2019-09-10 16:05:09,182  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:05:09,182  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7e002aa5[Scopes.SINGLETON]
2019-09-10 16:05:09,183  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:05:09,183  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,183  INFO Injector:92 
2019-09-10 16:05:09,184  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:05:09,184  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1d3bffce[Scopes.SINGLETON]
2019-09-10 16:05:09,184  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:05:09,185  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,185  INFO Injector:92 
2019-09-10 16:05:09,185  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:05:09,186  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@62c02af8[Scopes.SINGLETON]
2019-09-10 16:05:09,186  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:05:09,187  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,187  INFO Injector:92 
2019-09-10 16:05:09,187  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:05:09,188  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4ed61b6b[Scopes.SINGLETON]
2019-09-10 16:05:09,188  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:05:09,188  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,188  INFO Injector:92 
2019-09-10 16:05:09,189  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:05:09,189  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@44fe5876[Scopes.SINGLETON]
2019-09-10 16:05:09,189  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:05:09,189  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:09,189  INFO Injector:92 
2019-09-10 16:05:09,189  INFO Injector:95 === printInjector end ===
2019-09-10 16:05:09,190  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:09,190  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:09,190  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:05:09,190  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:05:09,268  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:05:09,283  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:05:09,285  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:05:09,286  INFO Gbl:54 used RAM: 727492176B = 710441kB = 693MB  free: 404969904B = 386MB  total: 1132462080B = 1080MB
2019-09-10 16:05:11,623  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=201 #nodes=61
2019-09-10 16:05:11,623  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=879 lost=0 simT=3600.0s realT=2s; (s/r): 1800.0
2019-09-10 16:05:11,623  INFO Gbl:54 used RAM: 777651880B = 759425kB = 741MB  free: 362674520B = 345MB  total: 1140326400B = 1087MB
2019-09-10 16:05:11,985  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:05:11,985  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=2s; (s/r): 3600.0
2019-09-10 16:05:11,985  INFO Gbl:54 used RAM: 813207496B = 794147kB = 775MB  free: 327118904B = 311MB  total: 1140326400B = 1087MB
2019-09-10 16:05:12,105  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.328125sec
2019-09-10 16:05:12,105  INFO AbstractController$8:215 ### ITERATION 3 fires after mobsim event
2019-09-10 16:05:12,106  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:05:12,108  INFO LegTimesControlerListener:50 [3] average trip (probably: leg) duration is: 3686 seconds = 01:01:26
2019-09-10 16:05:12,108  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:05:12,109  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:05:12,109  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:05:12,109  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:05:12,109  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:05:12,110  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:32][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:05:12,110  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:05:12,110  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:05:12,114  INFO ControlerListenerManagerImpl:251 [it.3] all ControlerAfterMobsimListeners called.
2019-09-10 16:05:12,115  INFO AbstractController$4:152 ### ITERATION 3 fires scoring event
2019-09-10 16:05:12,115  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:12,116  INFO NewScoreAssignerImpl:36 it: 3 msaStart: null
2019-09-10 16:05:12,120  INFO ControlerListenerManagerImpl:194 [it.3] all ControlerScoringListeners called.
2019-09-10 16:05:12,121  INFO AbstractController$5:160 ### ITERATION 3 fires iteration end event
2019-09-10 16:05:12,121  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:12,123  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:12,123  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:12,124  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:12,126  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:05:12,126  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:05:12,130  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:05:12,131  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:05:12,131  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:05:12,131  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:05:12,131  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:05:12,131  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:05:12,242  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:05:12,244  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 39.02757500193484
2019-09-10 16:05:12,244  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.587464029451375
2019-09-10 16:05:12,244  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 38.849194764063725
2019-09-10 16:05:12,244  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 39.104454492688845
2019-09-10 16:05:12,364  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:05:12,365  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:05:12,367  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:05:12,367  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 50788.47298941155
2019-09-10 16:05:12,367  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:05:12,367  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:05:12,440  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:12,444  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:05:12,444  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:05:12,690  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:12,690  INFO ControlerListenerManagerImpl:171 [it.3] all ControlerIterationEndsListeners called.
2019-09-10 16:05:12,794  INFO AbstractController:170 ### ITERATION 3 ENDS
2019-09-10 16:05:12,795  INFO AbstractController:171 ###################################################
2019-09-10 16:05:12,795  INFO AbstractController:126 ###################################################
2019-09-10 16:05:12,795  INFO AbstractController:127 ### ITERATION 4 BEGINS
2019-09-10 16:05:12,796  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:12,797  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:12,797  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:05:12,797  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:05:12,797  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:05:12,800  INFO ControlerListenerManagerImpl:148 [it.4] all ControlerIterationStartsListeners called.
2019-09-10 16:05:12,800  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-10 16:05:12,800 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:12,801 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:12,805  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1627 plans handled. Strategy: BestPlanSelector
2019-09-10 16:05:12,805  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 173 plans
2019-09-10 16:05:12,834  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-10 16:05:12,853  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-10 16:05:12,881  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-10 16:05:12,928  INFO Counter:61 [PlanRouter] handled plan # 8
2019-09-10 16:05:13,052  INFO Counter:61 [PlanRouter] handled plan # 16
2019-09-10 16:05:13,248  INFO Counter:61 [PlanRouter] handled plan # 32
2019-09-10 16:05:13,693  INFO Counter:61 [PlanRouter] handled plan # 64
2019-09-10 16:05:14,630  INFO Counter:61 [PlanRouter] handled plan # 128
2019-09-10 16:05:15,394  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-10 16:05:15,394  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 173 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-10 16:05:15,395  INFO ControlerListenerManagerImpl:213 [it.4] all ControlerReplanningListeners called.
2019-09-10 16:05:15,395  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:15,395  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:05:15,395  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:05:15,426  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:05:15,426  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:05:15,426  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:05:15,427  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:05:15,427  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:05:15,427  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:05:15,488  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:15,488  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:15,488  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:15,488  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:15,488  INFO EventsManagerImpl:156 
2019-09-10 16:05:15,488  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:15,488  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:15,488  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:15,488  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:15,488  INFO EventsManagerImpl:156 
2019-09-10 16:05:15,488  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:05:15,489  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:05:15,490  INFO ControlerListenerManagerImpl:232 [it.4] all ControlerBeforeMobsimListeners called.
2019-09-10 16:05:15,501  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:15,503  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:15,504  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:05:15,504  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:05:15,505  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:05:15,505  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:05:15,620  INFO Injector:80 === printInjector start ===
2019-09-10 16:05:15,620  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:05:15,620  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:05:15,621  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:05:15,621  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,621  INFO Injector:92 
2019-09-10 16:05:15,621  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:05:15,621  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@56e4bad0}[Scopes.SINGLETON]
2019-09-10 16:05:15,621  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:05:15,621  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,621  INFO Injector:92 
2019-09-10 16:05:15,621  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:05:15,622  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5ed7cc21[Scopes.SINGLETON]}
2019-09-10 16:05:15,622  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:05:15,622  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:05:15,622  INFO Injector:92 
2019-09-10 16:05:15,622  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:05:15,622  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@74540ae0[Scopes.SINGLETON]
2019-09-10 16:05:15,622  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:05:15,622  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,622  INFO Injector:92 
2019-09-10 16:05:15,623  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:05:15,623  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@623a9b14[Scopes.SINGLETON]
2019-09-10 16:05:15,623  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:05:15,623  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,623  INFO Injector:92 
2019-09-10 16:05:15,623  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:05:15,623  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2455d93[Scopes.SINGLETON]
2019-09-10 16:05:15,623  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:05:15,623  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,623  INFO Injector:92 
2019-09-10 16:05:15,623  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:05:15,624  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@c42c7f7[Scopes.SINGLETON]
2019-09-10 16:05:15,624  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:05:15,624  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,624  INFO Injector:92 
2019-09-10 16:05:15,624  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:05:15,624  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@37b56c18[Scopes.SINGLETON]
2019-09-10 16:05:15,624  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:05:15,624  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,625  INFO Injector:92 
2019-09-10 16:05:15,625  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:05:15,625  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@49fbfd16[Scopes.SINGLETON]
2019-09-10 16:05:15,625  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:05:15,625  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,625  INFO Injector:92 
2019-09-10 16:05:15,626  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:05:15,626  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@49d35e13[Scopes.SINGLETON]
2019-09-10 16:05:15,626  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:05:15,627  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,627  INFO Injector:92 
2019-09-10 16:05:15,627  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:05:15,627  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5ed7cc21[Scopes.SINGLETON]
2019-09-10 16:05:15,627  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:05:15,627  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:15,627  INFO Injector:92 
2019-09-10 16:05:15,627  INFO Injector:95 === printInjector end ===
2019-09-10 16:05:15,628  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:15,628  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:15,628  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:05:15,628  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:05:15,681  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:05:15,694  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:05:15,694  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:05:15,695  INFO Gbl:54 used RAM: 725251576B = 708253kB = 691MB  free: 425036296B = 405MB  total: 1150287872B = 1097MB
2019-09-10 16:05:17,813  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=191 #nodes=62
2019-09-10 16:05:17,813  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=854 lost=0 simT=3600.0s realT=2s; (s/r): 1800.0
2019-09-10 16:05:17,813  INFO Gbl:54 used RAM: 765955184B = 748003kB = 730MB  free: 391672720B = 373MB  total: 1157627904B = 1104MB
2019-09-10 16:05:18,162  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:05:18,162  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=2s; (s/r): 3600.0
2019-09-10 16:05:18,162  INFO Gbl:54 used RAM: 802726144B = 783912kB = 765MB  free: 354901760B = 338MB  total: 1157627904B = 1104MB
2019-09-10 16:05:18,290  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.140625sec
2019-09-10 16:05:18,290  INFO AbstractController$8:215 ### ITERATION 4 fires after mobsim event
2019-09-10 16:05:18,291  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:05:18,294  INFO LegTimesControlerListener:50 [4] average trip (probably: leg) duration is: 3661 seconds = 01:01:01
2019-09-10 16:05:18,295  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:45][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:05:18,295  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:05:18,297  INFO ControlerListenerManagerImpl:251 [it.4] all ControlerAfterMobsimListeners called.
2019-09-10 16:05:18,297  INFO AbstractController$4:152 ### ITERATION 4 fires scoring event
2019-09-10 16:05:18,298  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:18,300  INFO NewScoreAssignerImpl:36 it: 4 msaStart: null
2019-09-10 16:05:18,302  INFO ControlerListenerManagerImpl:194 [it.4] all ControlerScoringListeners called.
2019-09-10 16:05:18,302  INFO AbstractController$5:160 ### ITERATION 4 fires iteration end event
2019-09-10 16:05:18,303  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:18,306  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:18,306  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:18,306  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:18,307  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:05:18,309  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:05:18,311  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:05:18,312  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:05:18,312  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:05:18,312  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:05:18,312  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:05:18,312  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:05:18,433  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:05:18,434  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 39.24347953223034
2019-09-10 16:05:18,434  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.5124877057738
2019-09-10 16:05:18,434  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 38.90028069768338
2019-09-10 16:05:18,435  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 39.26975304163321
2019-09-10 16:05:18,513  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:05:18,513  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:05:18,517  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:05:18,518  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 50894.485114003044
2019-09-10 16:05:18,518  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:05:18,518  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:05:18,593  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:18,597  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:05:18,597  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:05:18,840  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:18,840  INFO ControlerListenerManagerImpl:171 [it.4] all ControlerIterationEndsListeners called.
2019-09-10 16:05:18,961  INFO AbstractController:170 ### ITERATION 4 ENDS
2019-09-10 16:05:18,961  INFO AbstractController:171 ###################################################
2019-09-10 16:05:18,961  INFO AbstractController:126 ###################################################
2019-09-10 16:05:18,961  INFO AbstractController:127 ### ITERATION 5 BEGINS
2019-09-10 16:05:18,962  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:18,963  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:18,963  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-10 16:05:18,963  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-10 16:05:18,964  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-10 16:05:18,966  INFO ControlerListenerManagerImpl:148 [it.5] all ControlerIterationStartsListeners called.
2019-09-10 16:05:18,966  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-10 16:05:18,966 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:18,967 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-10 16:05:18,969  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1632 plans handled. Strategy: BestPlanSelector
2019-09-10 16:05:18,970  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 168 plans
2019-09-10 16:05:19,028  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-10 16:05:19,048  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-10 16:05:19,065  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-10 16:05:19,105  INFO Counter:61 [PlanRouter] handled plan # 8
2019-09-10 16:05:19,189  INFO Counter:61 [PlanRouter] handled plan # 16
2019-09-10 16:05:19,439  INFO Counter:61 [PlanRouter] handled plan # 32
2019-09-10 16:05:19,895  INFO Counter:61 [PlanRouter] handled plan # 64
2019-09-10 16:05:20,902  INFO Counter:61 [PlanRouter] handled plan # 128
2019-09-10 16:05:21,545  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-10 16:05:21,545  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 168 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-10 16:05:21,545  INFO ControlerListenerManagerImpl:213 [it.5] all ControlerReplanningListeners called.
2019-09-10 16:05:21,545  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:21,545  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-10 16:05:21,546  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-10 16:05:21,575  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-10 16:05:21,575  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-10 16:05:21,575  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-10 16:05:21,575  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-10 16:05:21,576  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-10 16:05:21,576  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-10 16:05:21,578  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:21,578  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:21,578  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:21,578  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:21,579  INFO EventsManagerImpl:156 
2019-09-10 16:05:21,579  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:21,579  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-10 16:05:21,579  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-10 16:05:21,579  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-10 16:05:21,579  INFO EventsManagerImpl:156 
2019-09-10 16:05:21,579  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-10 16:05:21,579  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-10 16:05:21,582  INFO ControlerListenerManagerImpl:232 [it.5] all ControlerBeforeMobsimListeners called.
2019-09-10 16:05:21,589  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:21,594  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:21,597  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-10 16:05:21,600  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-10 16:05:21,602  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-10 16:05:21,606  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-10 16:05:21,716  INFO Injector:80 === printInjector start ===
2019-09-10 16:05:21,717  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-10 16:05:21,717  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-10 16:05:21,717  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-10 16:05:21,717  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,717  INFO Injector:92 
2019-09-10 16:05:21,717  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-10 16:05:21,718  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@33ee7a72}[Scopes.SINGLETON]
2019-09-10 16:05:21,718  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-10 16:05:21,718  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,718  INFO Injector:92 
2019-09-10 16:05:21,718  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-10 16:05:21,718  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5ccdda53[Scopes.SINGLETON]}
2019-09-10 16:05:21,718  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-10 16:05:21,719  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-10 16:05:21,719  INFO Injector:92 
2019-09-10 16:05:21,719  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-10 16:05:21,719  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@bea65d5[Scopes.SINGLETON]
2019-09-10 16:05:21,719  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-10 16:05:21,720  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,720  INFO Injector:92 
2019-09-10 16:05:21,720  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-10 16:05:21,721  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2a729c8d[Scopes.SINGLETON]
2019-09-10 16:05:21,721  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-10 16:05:21,721  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,722  INFO Injector:92 
2019-09-10 16:05:21,722  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-10 16:05:21,722  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1ace56f2[Scopes.SINGLETON]
2019-09-10 16:05:21,722  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-10 16:05:21,722  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,722  INFO Injector:92 
2019-09-10 16:05:21,723  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-10 16:05:21,723  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6a86abf9[Scopes.SINGLETON]
2019-09-10 16:05:21,723  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-10 16:05:21,723  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,723  INFO Injector:92 
2019-09-10 16:05:21,727  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-10 16:05:21,727  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@643d7cbc[Scopes.SINGLETON]
2019-09-10 16:05:21,729  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-10 16:05:21,729  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,729  INFO Injector:92 
2019-09-10 16:05:21,730  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-10 16:05:21,730  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@61c4ec60[Scopes.SINGLETON]
2019-09-10 16:05:21,730  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-10 16:05:21,731  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,731  INFO Injector:92 
2019-09-10 16:05:21,731  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-10 16:05:21,732  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2e7755fb[Scopes.SINGLETON]
2019-09-10 16:05:21,732  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-10 16:05:21,732  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,733  INFO Injector:92 
2019-09-10 16:05:21,733  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-10 16:05:21,734  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5ccdda53[Scopes.SINGLETON]
2019-09-10 16:05:21,734  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-10 16:05:21,734  INFO Injector:88   --> scope: eager singleton
2019-09-10 16:05:21,735  INFO Injector:92 
2019-09-10 16:05:21,735  INFO Injector:95 === printInjector end ===
2019-09-10 16:05:21,736  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-10 16:05:21,736  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-10 16:05:21,736  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-10 16:05:21,737  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-10 16:05:21,794  INFO QNetsimEngine:504 Assigned 39404 nodes and 95095 links to QSimEngineRunner #0
2019-09-10 16:05:21,803  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=295 #nodes=1357
2019-09-10 16:05:21,803  INFO QSim:506 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=1800 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-10 16:05:21,803  INFO Gbl:54 used RAM: 696071776B = 679757kB = 663MB  free: 470469024B = 448MB  total: 1166540800B = 1112MB
2019-09-10 16:05:24,060  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=198 #nodes=57
2019-09-10 16:05:24,061  INFO QSim:506 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=834 lost=0 simT=3600.0s realT=2s; (s/r): 1800.0
2019-09-10 16:05:24,061  INFO Gbl:54 used RAM: 729591152B = 712491kB = 695MB  free: 444289680B = 423MB  total: 1173880832B = 1119MB
2019-09-10 16:05:24,400  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=6 #nodes=0
2019-09-10 16:05:24,401  INFO QSim:506 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=26 lost=0 simT=7200.0s realT=2s; (s/r): 3600.0
2019-09-10 16:05:24,401  INFO Gbl:54 used RAM: 763841824B = 745939kB = 728MB  free: 410039008B = 391MB  total: 1173880832B = 1119MB
2019-09-10 16:05:24,522  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=2.28125sec
2019-09-10 16:05:24,522  INFO AbstractController$8:215 ### ITERATION 5 fires after mobsim event
2019-09-10 16:05:24,523  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-10 16:05:24,525  INFO LegTimesControlerListener:50 [5] average trip (probably: leg) duration is: 3652 seconds = 01:00:52
2019-09-10 16:05:24,525  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-10 16:05:24,526  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-10 16:05:24,526  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-10 16:05:24,526  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-10 16:05:24,526  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=91589][startTime=undefined][endTime=11:00:00][duration=undefined][facilityId=null]
2019-09-10 16:05:24,527  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=13972][startTime=12:18:38][endTime=undefined][duration=undefined][facilityId=null]
2019-09-10 16:05:24,527  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-10 16:05:24,527  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-10 16:05:24,530  INFO ControlerListenerManagerImpl:251 [it.5] all ControlerAfterMobsimListeners called.
2019-09-10 16:05:24,530  INFO AbstractController$4:152 ### ITERATION 5 fires scoring event
2019-09-10 16:05:24,530  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:24,531  INFO NewScoreAssignerImpl:36 it: 5 msaStart: null
2019-09-10 16:05:24,533  INFO ControlerListenerManagerImpl:194 [it.5] all ControlerScoringListeners called.
2019-09-10 16:05:24,534  INFO AbstractController$5:160 ### ITERATION 5 fires iteration end event
2019-09-10 16:05:24,534  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:24,536  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:24,536  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-10 16:05:24,537  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-10 16:05:24,538  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-10 16:05:24,538  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-10 16:05:24,540  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-10 16:05:24,659  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:05:24,661  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 39.32369952645379
2019-09-10 16:05:24,661  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 38.62741435577664
2019-09-10 16:05:24,661  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 39.02370188883524
2019-09-10 16:05:24,662  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 39.39490328379532
2019-09-10 16:05:24,732  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:05:24,732  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-10 16:05:24,735  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-10 16:05:24,735  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 51005.3723626276
2019-09-10 16:05:24,736  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-10 16:05:24,736  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-10 16:05:24,809  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-10 16:05:24,812  INFO LegHistogramListener:72 number of legs:	1800	100%
2019-09-10 16:05:24,813  INFO LegHistogramListener:79 number of car legs:	1800	100.0%
2019-09-10 16:05:25,051  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-10 16:05:25,051  INFO ControlerListenerManagerImpl:171 [it.5] all ControlerIterationEndsListeners called.
2019-09-10 16:05:25,152  INFO AbstractController:170 ### ITERATION 5 ENDS
2019-09-10 16:05:25,152  INFO AbstractController:171 ###################################################
2019-09-10 16:05:25,152  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2019-09-10 16:05:25,152  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-10 16:05:25,152  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2019-09-10 16:05:25,155  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-10 16:05:25,156  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-10 16:05:25,156  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-10 16:05:25,157  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-10 16:05:25,158  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-10 16:05:25,161  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-10 16:05:25,164  INFO Counter:61 [PopulationWriter] dumped person # 64
2019-09-10 16:05:25,170  INFO Counter:61 [PopulationWriter] dumped person # 128
2019-09-10 16:05:25,180  INFO Counter:61 [PopulationWriter] dumped person # 256
2019-09-10 16:05:25,195  INFO Counter:61 [PopulationWriter] dumped person # 512
2019-09-10 16:05:25,227  INFO Counter:61 [PopulationWriter] dumped person # 1024
2019-09-10 16:05:25,280  INFO PopulationWriter:139 Population written to: ./output/output_plans.xml.gz
2019-09-10 16:05:25,282  INFO Counter:67 [PopulationWriter] dumped person # 1800
2019-09-10 16:05:25,287  INFO NetworkWriter:68 Writing network to file: ./output/output_network.xml.gz...
2019-09-10 16:05:26,534  INFO NetworkWriter:71 done.
2019-09-10 16:05:26,534  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/California/]
2019-09-10 16:05:26,581  INFO VehicleWriterV1:55 Vehicles written to: ./output/output_vehicles.xml.gz
2019-09-10 16:05:26,585  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2019-09-10 16:05:26,588  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2019-09-10 16:05:26,589  INFO LanesWriter:74 writing to file: ./output/output_lanes.xml.gz
2019-09-10 16:05:26,726  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2019-09-10 16:05:26,727  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2019-09-10 16:05:26,728  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-10 16:05:26,730  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2019-09-10 16:05:26,730  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2019-09-10 16:05:26,730  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
