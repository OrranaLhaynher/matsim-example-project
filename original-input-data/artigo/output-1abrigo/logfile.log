2019-08-23 15:33:16,563  INFO Gbl:59 JVM: 1.8.0_211; Oracle Corporation; mixed mode; 64-bit
2019-08-23 15:33:16,564  INFO Gbl:63 OS: Windows 10; 10.0; amd64
2019-08-23 15:33:16,564  INFO Gbl:66 CPU cores: 4
2019-08-23 15:33:16,565  INFO Gbl:67 max. Memory: 3556.0MB (3728736256B)
2019-08-23 15:33:16,566  INFO Gbl:105 MATSim-Build: r2e52cf1f54a31596d20f378d536f9dd7a0a860bb (2018-08-25 22:17:05)
2019-08-23 15:33:16,573  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:16,576  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:16,981 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:17,215  INFO NetworkImpl:167  node # 1
2019-08-23 15:33:17,215  INFO NetworkImpl:167  node # 4
2019-08-23 15:33:17,215  INFO NetworkImpl:167  node # 16
2019-08-23 15:33:17,216  INFO NetworkImpl:167  node # 64
2019-08-23 15:33:17,216  INFO NetworkImpl:167  node # 256
2019-08-23 15:33:17,217  INFO NetworkImpl:167  node # 1024
2019-08-23 15:33:17,224  INFO NetworkImpl:167  node # 4096
2019-08-23 15:33:17,234  INFO NetworkImpl:167  node # 16384
2019-08-23 15:33:17,236  INFO NetworkImpl:163  link # 1
2019-08-23 15:33:17,242  INFO NetworkImpl:163  link # 4
2019-08-23 15:33:17,246  INFO NetworkImpl:163  link # 16
2019-08-23 15:33:17,252  INFO NetworkImpl:163  link # 64
2019-08-23 15:33:17,260  INFO NetworkImpl:163  link # 256
2019-08-23 15:33:17,269  INFO NetworkImpl:163  link # 1024
2019-08-23 15:33:17,293  INFO NetworkImpl:163  link # 4096
2019-08-23 15:33:17,352  INFO NetworkImpl:163  link # 16384
2019-08-23 15:33:17,425  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:17,426  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2019-08-23 15:33:17,426  INFO ControlerUtils:58 config dump before iterations start
2019-08-23 15:33:17,541  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-08-23 15:33:17,556  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="5" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="./output" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="EPSG:2782" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="artigo.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="shelter" />
				<param name="closingTime" value="14:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="08:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="08:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="population_before.xml.gz" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="23:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="08:30:00" />
		<param name="startTime" value="06:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2019-08-23 15:33:17,601  INFO ControlerUtils:63 Complete config dump done.
2019-08-23 15:33:17,601  INFO ControlerUtils:64 Checking consistency of config...
2019-08-23 15:33:17,605  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2019-08-23 15:33:17,606  INFO ControlerUtils:66 Checking consistency of config done.
2019-08-23 15:33:17,845 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:17,857 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:17,870  INFO NetworkImpl:426 building QuadTree for nodes: xrange(443131.1248588478,570436.5846525345); yrange(9000.250507828903,158428.51607133824)
2019-08-23 15:33:18,119  INFO NetworkImpl:435 Building QuadTree took 0.254 seconds.
2019-08-23 15:33:18,884  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2019-08-23 15:33:19,417  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2019-08-23 15:33:19,503  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2019-08-23 15:33:19,607  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2019-08-23 15:33:19,716  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2019-08-23 15:33:19,826  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2019-08-23 15:33:19,928  INFO Counter:67 [PersonPrepareForSim] handled person # 46
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 1
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 2
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 4
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 8
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 16
2019-08-23 15:33:19,929  INFO Counter:61  vehicles # 32
2019-08-23 15:33:19,940  INFO AbstractController:126 ###################################################
2019-08-23 15:33:19,940  INFO AbstractController:127 ### ITERATION 0 BEGINS
2019-08-23 15:33:19,943  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:19,944  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:19,944  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:19,944  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:19,946  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:20,428  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2019-08-23 15:33:20,429  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:20,429  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:20,430  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:20,456  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:20,737  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:20,738  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:20,738  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:20,738  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:20,738  INFO EventsManagerImpl:156 
2019-08-23 15:33:20,738  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:20,738  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:20,739  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:20,739  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:20,739  INFO EventsManagerImpl:156 
2019-08-23 15:33:20,739  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:20,739  INFO PlansDumpingImpl:75 dumping plans...
2019-08-23 15:33:20,912  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-08-23 15:33:20,912  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-08-23 15:33:20,913  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-08-23 15:33:20,915  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-08-23 15:33:20,919  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-08-23 15:33:20,926  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-08-23 15:33:20,938  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.0/0.plans.xml.gz
2019-08-23 15:33:20,943  INFO Counter:67 [PopulationWriter] dumped person # 46
2019-08-23 15:33:20,943  INFO PlansDumpingImpl:92 finished plans dump.
2019-08-23 15:33:20,944  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:20,946  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:23,848  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:23,849  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:23,849  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:23,850  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:23,851  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:23,851  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:24,614  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:24,614  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:24,615  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:24,615  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:24,615  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,615  INFO Injector:92 
2019-08-23 15:33:24,616  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:24,616  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2a62b5bc}[Scopes.SINGLETON]
2019-08-23 15:33:24,616  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:24,616  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,616  INFO Injector:92 
2019-08-23 15:33:24,616  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:24,617  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@24111ef1[Scopes.SINGLETON]}
2019-08-23 15:33:24,617  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:24,617  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:24,617  INFO Injector:92 
2019-08-23 15:33:24,617  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:24,618  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7b94089b[Scopes.SINGLETON]
2019-08-23 15:33:24,618  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:24,618  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,618  INFO Injector:92 
2019-08-23 15:33:24,619  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:24,619  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2ea6e30c[Scopes.SINGLETON]
2019-08-23 15:33:24,619  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:24,620  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,620  INFO Injector:92 
2019-08-23 15:33:24,621  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:24,621  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@42bc14c1[Scopes.SINGLETON]
2019-08-23 15:33:24,621  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:24,621  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,621  INFO Injector:92 
2019-08-23 15:33:24,622  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:24,622  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@74f5ce22[Scopes.SINGLETON]
2019-08-23 15:33:24,622  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:24,622  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,622  INFO Injector:92 
2019-08-23 15:33:24,622  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:24,622  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@79179359[Scopes.SINGLETON]
2019-08-23 15:33:24,623  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:24,623  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,623  INFO Injector:92 
2019-08-23 15:33:24,623  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:24,623  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@79517588[Scopes.SINGLETON]
2019-08-23 15:33:24,624  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:24,624  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,625  INFO Injector:92 
2019-08-23 15:33:24,625  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:24,626  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@403f0a22[Scopes.SINGLETON]
2019-08-23 15:33:24,626  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:24,627  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,627  INFO Injector:92 
2019-08-23 15:33:24,627  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:24,628  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@24111ef1[Scopes.SINGLETON]
2019-08-23 15:33:24,628  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:24,629  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:24,629  INFO Injector:92 
2019-08-23 15:33:24,629  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:24,630  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:24,631  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:24,632  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:24,632  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:24,810  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:24,813  INFO EventsManagerImpl:134  event # 1
2019-08-23 15:33:24,818  INFO EventsManagerImpl:134  event # 4
2019-08-23 15:33:24,819  INFO EventsManagerImpl:134  event # 16
2019-08-23 15:33:24,821  INFO EventsManagerImpl:134  event # 64
2019-08-23 15:33:24,908  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:24,908  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=1s; (s/r): 0.0
2019-08-23 15:33:24,908  INFO Gbl:54 used RAM: 288601000B = 281836kB = 275MB  free: 297552984B = 283MB  total: 586153984B = 559MB
2019-08-23 15:33:24,915  INFO EventsManagerImpl:134  event # 256
2019-08-23 15:33:24,938 ERROR BasicPlanAgentImpl:165 last activity of person driver agent id 35 has end time < infty; setting it to infty
2019-08-23 15:33:24,938 ERROR BasicPlanAgentImpl:166  This message given only once.
2019-08-23 15:33:24,982  INFO EventsManagerImpl:134  event # 1024
2019-08-23 15:33:25,099  INFO EventsManagerImpl:134  event # 4096
2019-08-23 15:33:25,346  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:25,346  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=1s; (s/r): 3600.0
2019-08-23 15:33:25,347  INFO Gbl:54 used RAM: 299312904B = 292297kB = 285MB  free: 286841080B = 273MB  total: 586153984B = 559MB
2019-08-23 15:33:25,569  INFO EventsManagerImpl:134  event # 16384
2019-08-23 15:33:25,585  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:25,585  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=1s; (s/r): 7200.0
2019-08-23 15:33:25,586  INFO Gbl:54 used RAM: 304881560B = 297735kB = 290MB  free: 281272424B = 268MB  total: 586153984B = 559MB
2019-08-23 15:33:25,836  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.3125sec
2019-08-23 15:33:25,837  INFO AbstractController$8:215 ### ITERATION 0 fires after mobsim event
2019-08-23 15:33:25,837  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:25,840  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:25,840  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:25,841  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:25,841  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:25,841  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:25,842  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:25,867  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:25,867  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:25,867  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:25,868  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:25,869  INFO AbstractController$4:152 ### ITERATION 0 fires scoring event
2019-08-23 15:33:25,869  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:25,873  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2019-08-23 15:33:25,874  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2019-08-23 15:33:25,875  INFO AbstractController$5:160 ### ITERATION 0 fires iteration end event
2019-08-23 15:33:25,875  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:25,878  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:25,878  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:25,879  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:25,879  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:25,879  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:25,880  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:25,882  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:25,882  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:25,882  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:25,882  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:25,883  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:25,883  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:25,883  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98384102478298
2019-08-23 15:33:25,883  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.98384102478298
2019-08-23 15:33:25,883  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.98384102478298
2019-08-23 15:33:25,883  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.98384102478298
2019-08-23 15:33:25,884  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:25,884  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:25,885  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:25,886  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70531.94089491211
2019-08-23 15:33:25,886  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:25,886  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:25,886  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:25,892  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:25,892  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:30,949  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:30,949  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2019-08-23 15:33:31,426  INFO AbstractController:170 ### ITERATION 0 ENDS
2019-08-23 15:33:31,427  INFO AbstractController:171 ###################################################
2019-08-23 15:33:31,427  INFO AbstractController:126 ###################################################
2019-08-23 15:33:31,428  INFO AbstractController:127 ### ITERATION 1 BEGINS
2019-08-23 15:33:31,429  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:31,430  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:31,430  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:31,430  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:31,430  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:31,431  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2019-08-23 15:33:31,437  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-08-23 15:33:31,440 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:31,441 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:31,446  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 39 plans handled. Strategy: BestPlanSelector
2019-08-23 15:33:31,446  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 7 plans
2019-08-23 15:33:31,478  INFO Counter:61 [PlanRouter] handled plan # 1
2019-08-23 15:33:31,500  INFO Counter:61 [PlanRouter] handled plan # 2
2019-08-23 15:33:31,526  INFO Counter:61 [PlanRouter] handled plan # 4
2019-08-23 15:33:31,574  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-08-23 15:33:31,574  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 7 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-08-23 15:33:31,574  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2019-08-23 15:33:31,575  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:31,575  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:31,575  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:31,601  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:31,601  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:31,602  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:31,602  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:31,602  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:31,602  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:31,604  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:31,605  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:31,605  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:31,605  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:31,605  INFO EventsManagerImpl:156 
2019-08-23 15:33:31,605  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:31,605  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:31,605  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:31,605  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:31,729  INFO EventsManagerImpl:156 
2019-08-23 15:33:31,730  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:31,731  INFO PlansDumpingImpl:75 dumping plans...
2019-08-23 15:33:31,735  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-08-23 15:33:31,739  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-08-23 15:33:31,740  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-08-23 15:33:31,744  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-08-23 15:33:31,748  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-08-23 15:33:31,754  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-08-23 15:33:31,758  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.1/1.plans.xml.gz
2019-08-23 15:33:31,763  INFO Counter:67 [PopulationWriter] dumped person # 46
2019-08-23 15:33:31,764  INFO PlansDumpingImpl:92 finished plans dump.
2019-08-23 15:33:31,766  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:31,766  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:31,777  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:31,778  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:31,780  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:31,781  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:31,782  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:31,782  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:31,884  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:31,887  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:31,888  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:31,888  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:31,889  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,889  INFO Injector:92 
2019-08-23 15:33:31,890  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:31,890  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@19507769}[Scopes.SINGLETON]
2019-08-23 15:33:31,891  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:31,891  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,891  INFO Injector:92 
2019-08-23 15:33:31,892  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:31,895  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1d81dece[Scopes.SINGLETON]}
2019-08-23 15:33:31,899  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:31,902  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:31,907  INFO Injector:92 
2019-08-23 15:33:31,910  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:31,912  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3d4d2e29[Scopes.SINGLETON]
2019-08-23 15:33:31,917  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:31,917  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,921  INFO Injector:92 
2019-08-23 15:33:31,927  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:31,931  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5876bdbb[Scopes.SINGLETON]
2019-08-23 15:33:31,935  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:31,935  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,941  INFO Injector:92 
2019-08-23 15:33:31,945  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:31,948  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@418ee41b[Scopes.SINGLETON]
2019-08-23 15:33:31,952  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:31,956  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,959  INFO Injector:92 
2019-08-23 15:33:31,963  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:31,966  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3f9167f7[Scopes.SINGLETON]
2019-08-23 15:33:31,971  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:31,972  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,975  INFO Injector:92 
2019-08-23 15:33:31,981  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:31,982  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5df3f854[Scopes.SINGLETON]
2019-08-23 15:33:31,983  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:31,983  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,983  INFO Injector:92 
2019-08-23 15:33:31,984  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:31,984  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@475534d1[Scopes.SINGLETON]
2019-08-23 15:33:31,989  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:31,992  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,994  INFO Injector:92 
2019-08-23 15:33:31,994  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:31,995  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7e3cea61[Scopes.SINGLETON]
2019-08-23 15:33:31,995  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:31,995  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,995  INFO Injector:92 
2019-08-23 15:33:31,996  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:31,997  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1d81dece[Scopes.SINGLETON]
2019-08-23 15:33:31,997  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:31,997  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:31,998  INFO Injector:92 
2019-08-23 15:33:31,998  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:32,000  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:32,002  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:32,002  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:32,005  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:32,068  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:32,076  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:32,076  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-08-23 15:33:32,077  INFO Gbl:54 used RAM: 332129872B = 324345kB = 316MB  free: 293870000B = 280MB  total: 625999872B = 597MB
2019-08-23 15:33:32,463  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:32,463  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:32,464  INFO Gbl:54 used RAM: 341360864B = 333360kB = 325MB  free: 284639008B = 271MB  total: 625999872B = 597MB
2019-08-23 15:33:32,731  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:32,732  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:32,738  INFO Gbl:54 used RAM: 347162816B = 339026kB = 331MB  free: 278837056B = 265MB  total: 625999872B = 597MB
2019-08-23 15:33:33,089  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.375sec
2019-08-23 15:33:33,089  INFO AbstractController$8:215 ### ITERATION 1 fires after mobsim event
2019-08-23 15:33:33,089  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:33,093  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:33,093  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:33,094  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:33,096  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:33,102  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:33,105  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:33,105  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:33,105  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:33,107  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:33,109  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:33,110  INFO AbstractController$4:152 ### ITERATION 1 fires scoring event
2019-08-23 15:33:33,110  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:33,111  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2019-08-23 15:33:33,111  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2019-08-23 15:33:33,112  INFO AbstractController$5:160 ### ITERATION 1 fires iteration end event
2019-08-23 15:33:33,112  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:33,115  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:33,116  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:33,116  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:33,117  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:33,117  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:33,121  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:33,122  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:33,122  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:33,123  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:33,123  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:33,124  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:33,635  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:33,636  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98156286122685
2019-08-23 15:33:33,636  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.98134546992251
2019-08-23 15:33:33,637  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.98282566384719
2019-08-23 15:33:33,637  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.984305857771886
2019-08-23 15:33:33,928  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:33,928  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:33,929  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:33,930  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70537.62809352759
2019-08-23 15:33:33,930  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:33,930  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:34,090  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:34,094  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:34,095  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:34,481  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:34,482  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2019-08-23 15:33:34,738  INFO AbstractController:170 ### ITERATION 1 ENDS
2019-08-23 15:33:34,738  INFO AbstractController:171 ###################################################
2019-08-23 15:33:34,739  INFO AbstractController:126 ###################################################
2019-08-23 15:33:34,739  INFO AbstractController:127 ### ITERATION 2 BEGINS
2019-08-23 15:33:34,744  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:34,747  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:34,747  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:34,748  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:34,748  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:34,749  INFO ControlerListenerManagerImpl:148 [it.2] all ControlerIterationStartsListeners called.
2019-08-23 15:33:34,749  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-08-23 15:33:34,750 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:34,751 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:34,752  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 42 plans handled. Strategy: BestPlanSelector
2019-08-23 15:33:34,754  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 4 plans
2019-08-23 15:33:34,771  INFO Counter:61 [PlanRouter] handled plan # 1
2019-08-23 15:33:34,783  INFO Counter:61 [PlanRouter] handled plan # 2
2019-08-23 15:33:34,815  INFO Counter:61 [PlanRouter] handled plan # 4
2019-08-23 15:33:34,816  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-08-23 15:33:34,817  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 4 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-08-23 15:33:34,817  INFO ControlerListenerManagerImpl:213 [it.2] all ControlerReplanningListeners called.
2019-08-23 15:33:34,817  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:34,817  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:34,818  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:34,847  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:34,847  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:34,848  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:34,848  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:34,848  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:34,849  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:34,851  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:34,851  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:34,852  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:34,854  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:34,855  INFO EventsManagerImpl:156 
2019-08-23 15:33:34,855  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:34,875  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:34,875  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:34,875  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:34,876  INFO EventsManagerImpl:156 
2019-08-23 15:33:34,877  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:34,877  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:34,877  INFO ControlerListenerManagerImpl:232 [it.2] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:34,891  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:34,894  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:34,894  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:34,895  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:34,895  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:34,896  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:35,109  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:35,110  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:35,111  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:35,111  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:35,111  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,111  INFO Injector:92 
2019-08-23 15:33:35,112  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:35,112  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1d868003}[Scopes.SINGLETON]
2019-08-23 15:33:35,112  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:35,112  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,113  INFO Injector:92 
2019-08-23 15:33:35,114  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:35,115  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@241f9269[Scopes.SINGLETON]}
2019-08-23 15:33:35,115  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:35,115  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:35,117  INFO Injector:92 
2019-08-23 15:33:35,122  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:35,124  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5b44c03e[Scopes.SINGLETON]
2019-08-23 15:33:35,127  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:35,128  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,128  INFO Injector:92 
2019-08-23 15:33:35,129  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:35,132  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@35e53c7a[Scopes.SINGLETON]
2019-08-23 15:33:35,133  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:35,133  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,133  INFO Injector:92 
2019-08-23 15:33:35,134  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:35,135  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@77a02171[Scopes.SINGLETON]
2019-08-23 15:33:35,138  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:35,138  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,138  INFO Injector:92 
2019-08-23 15:33:35,139  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:35,148  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1ea12b21[Scopes.SINGLETON]
2019-08-23 15:33:35,149  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:35,149  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,149  INFO Injector:92 
2019-08-23 15:33:35,150  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:35,150  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7a238e5f[Scopes.SINGLETON]
2019-08-23 15:33:35,154  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:35,154  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,158  INFO Injector:92 
2019-08-23 15:33:35,159  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:35,160  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1523ef53[Scopes.SINGLETON]
2019-08-23 15:33:35,161  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:35,162  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,162  INFO Injector:92 
2019-08-23 15:33:35,162  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:35,163  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4063f07e[Scopes.SINGLETON]
2019-08-23 15:33:35,163  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:35,164  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,164  INFO Injector:92 
2019-08-23 15:33:35,167  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:35,170  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@241f9269[Scopes.SINGLETON]
2019-08-23 15:33:35,171  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:35,173  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:35,181  INFO Injector:92 
2019-08-23 15:33:35,181  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:35,188  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:35,190  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:35,191  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:35,191  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:35,228  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:35,242  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:35,243  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-08-23 15:33:35,243  INFO Gbl:54 used RAM: 326036256B = 318394kB = 310MB  free: 321983712B = 307MB  total: 648019968B = 618MB
2019-08-23 15:33:35,523  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:35,524  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:35,524  INFO Gbl:54 used RAM: 335021648B = 327169kB = 319MB  free: 312998320B = 298MB  total: 648019968B = 618MB
2019-08-23 15:33:35,741  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:35,741  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:35,741  INFO Gbl:54 used RAM: 338744200B = 330804kB = 323MB  free: 309275768B = 294MB  total: 648019968B = 618MB
2019-08-23 15:33:35,856  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.171875sec
2019-08-23 15:33:35,856  INFO AbstractController$8:215 ### ITERATION 2 fires after mobsim event
2019-08-23 15:33:35,856  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:35,859  INFO LegTimesControlerListener:50 [2] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:35,859  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:35,859  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:35,859  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:35,860  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:35,860  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:35,863  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:35,864  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:35,864  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:35,868  INFO ControlerListenerManagerImpl:251 [it.2] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:35,869  INFO AbstractController$4:152 ### ITERATION 2 fires scoring event
2019-08-23 15:33:35,869  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:35,869  INFO NewScoreAssignerImpl:36 it: 2 msaStart: null
2019-08-23 15:33:35,870  INFO ControlerListenerManagerImpl:194 [it.2] all ControlerScoringListeners called.
2019-08-23 15:33:35,871  INFO AbstractController$5:160 ### ITERATION 2 fires iteration end event
2019-08-23 15:33:35,871  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:35,873  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:35,874  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:35,874  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:35,874  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:35,874  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:35,875  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:35,875  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:35,876  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:35,876  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:35,876  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:35,876  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:36,023  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:36,024  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98308015521778
2019-08-23 15:33:36,024  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.98026469490462
2019-08-23 15:33:36,024  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.981859623128834
2019-08-23 15:33:36,024  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.9834062421743
2019-08-23 15:33:36,103  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:36,104  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:36,105  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:36,105  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70538.3177525499
2019-08-23 15:33:36,105  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:36,105  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:36,186  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:36,191  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:36,191  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:36,438  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:36,438  INFO ControlerListenerManagerImpl:171 [it.2] all ControlerIterationEndsListeners called.
2019-08-23 15:33:36,561  INFO AbstractController:170 ### ITERATION 2 ENDS
2019-08-23 15:33:36,561  INFO AbstractController:171 ###################################################
2019-08-23 15:33:36,561  INFO AbstractController:126 ###################################################
2019-08-23 15:33:36,561  INFO AbstractController:127 ### ITERATION 3 BEGINS
2019-08-23 15:33:36,562  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:148 [it.3] all ControlerIterationStartsListeners called.
2019-08-23 15:33:36,563  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-08-23 15:33:36,563 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:36,564 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:36,565  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 41 plans handled. Strategy: BestPlanSelector
2019-08-23 15:33:36,565  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-08-23 15:33:36,604  INFO Counter:61 [PlanRouter] handled plan # 1
2019-08-23 15:33:36,607  INFO Counter:61 [PlanRouter] handled plan # 2
2019-08-23 15:33:36,626  INFO Counter:61 [PlanRouter] handled plan # 4
2019-08-23 15:33:36,646  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-08-23 15:33:36,646  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-08-23 15:33:36,647  INFO ControlerListenerManagerImpl:213 [it.3] all ControlerReplanningListeners called.
2019-08-23 15:33:36,647  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:36,647  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:36,647  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:36,671  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:36,671  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:36,671  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:36,672  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:36,672  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:36,672  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:36,674  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:36,674  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:36,674  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:36,674  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:36,674  INFO EventsManagerImpl:156 
2019-08-23 15:33:36,675  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:36,675  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:36,676  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:36,676  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:36,676  INFO EventsManagerImpl:156 
2019-08-23 15:33:36,677  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:36,677  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:36,678  INFO ControlerListenerManagerImpl:232 [it.3] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:36,705  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:36,705  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:36,706  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:36,706  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:36,706  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:36,707  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:36,880  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:36,880  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:36,880  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:36,881  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:36,881  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,881  INFO Injector:92 
2019-08-23 15:33:36,881  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:36,882  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4b9ce18b}[Scopes.SINGLETON]
2019-08-23 15:33:36,882  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:36,883  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,883  INFO Injector:92 
2019-08-23 15:33:36,883  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:36,885  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@40bd17ab[Scopes.SINGLETON]}
2019-08-23 15:33:36,886  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:36,888  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:36,888  INFO Injector:92 
2019-08-23 15:33:36,890  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:36,891  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4f1f2cf9[Scopes.SINGLETON]
2019-08-23 15:33:36,891  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:36,891  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,891  INFO Injector:92 
2019-08-23 15:33:36,892  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:36,893  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3ac6e64a[Scopes.SINGLETON]
2019-08-23 15:33:36,893  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:36,893  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,894  INFO Injector:92 
2019-08-23 15:33:36,895  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:36,895  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@51d6b4ac[Scopes.SINGLETON]
2019-08-23 15:33:36,896  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:36,896  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,896  INFO Injector:92 
2019-08-23 15:33:36,897  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:36,897  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@45188019[Scopes.SINGLETON]
2019-08-23 15:33:36,899  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:36,899  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,900  INFO Injector:92 
2019-08-23 15:33:36,900  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:36,900  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6fcdb669[Scopes.SINGLETON]
2019-08-23 15:33:36,900  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:36,901  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,901  INFO Injector:92 
2019-08-23 15:33:36,901  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:36,902  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2a4aa2f7[Scopes.SINGLETON]
2019-08-23 15:33:36,902  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:36,902  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,902  INFO Injector:92 
2019-08-23 15:33:36,904  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:36,906  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6d12bf6c[Scopes.SINGLETON]
2019-08-23 15:33:36,908  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:36,908  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,910  INFO Injector:92 
2019-08-23 15:33:36,911  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:36,911  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@40bd17ab[Scopes.SINGLETON]
2019-08-23 15:33:36,913  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:36,914  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:36,914  INFO Injector:92 
2019-08-23 15:33:36,914  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:36,914  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:36,915  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:36,915  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:36,915  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:36,964  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:36,967  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:36,968  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-08-23 15:33:36,968  INFO Gbl:54 used RAM: 321995920B = 314449kB = 307MB  free: 334412656B = 318MB  total: 656408576B = 626MB
2019-08-23 15:33:37,174  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:37,174  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:37,174  INFO Gbl:54 used RAM: 331131696B = 323370kB = 315MB  free: 325276880B = 310MB  total: 656408576B = 626MB
2019-08-23 15:33:37,263  INFO EventsManagerImpl:134  event # 65536
2019-08-23 15:33:37,362  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:37,362  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:37,363  INFO Gbl:54 used RAM: 334855176B = 327007kB = 319MB  free: 321553400B = 306MB  total: 656408576B = 626MB
2019-08-23 15:33:37,445  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.140625sec
2019-08-23 15:33:37,445  INFO AbstractController$8:215 ### ITERATION 3 fires after mobsim event
2019-08-23 15:33:37,446  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:37,448  INFO LegTimesControlerListener:50 [3] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:37,448  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:37,448  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:37,448  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:37,448  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:37,448  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:37,449  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:37,449  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:37,449  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:37,449  INFO ControlerListenerManagerImpl:251 [it.3] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:37,449  INFO AbstractController$4:152 ### ITERATION 3 fires scoring event
2019-08-23 15:33:37,449  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:37,450  INFO NewScoreAssignerImpl:36 it: 3 msaStart: null
2019-08-23 15:33:37,450  INFO ControlerListenerManagerImpl:194 [it.3] all ControlerScoringListeners called.
2019-08-23 15:33:37,450  INFO AbstractController$5:160 ### ITERATION 3 fires iteration end event
2019-08-23 15:33:37,450  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:37,452  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:37,452  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:37,452  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:37,452  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:37,453  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:37,453  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:37,454  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:37,454  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:37,454  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:37,454  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:37,454  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:37,547  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:37,547  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98035950547236
2019-08-23 15:33:37,548  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.97906133915012
2019-08-23 15:33:37,548  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.980987014869676
2019-08-23 15:33:37,548  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.98347884172632
2019-08-23 15:33:37,613  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:37,613  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:37,614  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:37,615  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70586.55699623263
2019-08-23 15:33:37,615  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:37,615  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:37,687  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:37,691  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:37,691  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:37,935  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:37,935  INFO ControlerListenerManagerImpl:171 [it.3] all ControlerIterationEndsListeners called.
2019-08-23 15:33:38,047  INFO AbstractController:170 ### ITERATION 3 ENDS
2019-08-23 15:33:38,047  INFO AbstractController:171 ###################################################
2019-08-23 15:33:38,047  INFO AbstractController:126 ###################################################
2019-08-23 15:33:38,047  INFO AbstractController:127 ### ITERATION 4 BEGINS
2019-08-23 15:33:38,048  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:148 [it.4] all ControlerIterationStartsListeners called.
2019-08-23 15:33:38,049  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-08-23 15:33:38,049 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:38,050 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:38,050  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 41 plans handled. Strategy: BestPlanSelector
2019-08-23 15:33:38,050  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-08-23 15:33:38,067  INFO Counter:61 [PlanRouter] handled plan # 1
2019-08-23 15:33:38,072  INFO Counter:61 [PlanRouter] handled plan # 2
2019-08-23 15:33:38,102  INFO Counter:61 [PlanRouter] handled plan # 4
2019-08-23 15:33:38,128  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-08-23 15:33:38,129  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-08-23 15:33:38,129  INFO ControlerListenerManagerImpl:213 [it.4] all ControlerReplanningListeners called.
2019-08-23 15:33:38,129  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:38,129  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:38,129  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:38,156  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:38,156  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:38,156  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:38,157  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:38,157  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:38,157  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:38,158  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:38,159  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:38,159  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:38,159  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:38,159  INFO EventsManagerImpl:156 
2019-08-23 15:33:38,159  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:38,159  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:38,159  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:38,159  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:38,159  INFO EventsManagerImpl:156 
2019-08-23 15:33:38,159  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:38,160  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:38,160  INFO ControlerListenerManagerImpl:232 [it.4] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:38,168  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:38,169  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:38,169  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:38,170  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:38,171  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:38,171  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:38,239  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:38,240  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:38,240  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:38,240  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:38,240  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,240  INFO Injector:92 
2019-08-23 15:33:38,240  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:38,240  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@851fa2d}[Scopes.SINGLETON]
2019-08-23 15:33:38,241  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:38,241  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,241  INFO Injector:92 
2019-08-23 15:33:38,241  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:38,241  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5868cf79[Scopes.SINGLETON]}
2019-08-23 15:33:38,241  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:38,241  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:38,242  INFO Injector:92 
2019-08-23 15:33:38,242  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:38,242  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@75b54e47[Scopes.SINGLETON]
2019-08-23 15:33:38,242  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:38,242  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,242  INFO Injector:92 
2019-08-23 15:33:38,242  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:38,242  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@54b1e755[Scopes.SINGLETON]
2019-08-23 15:33:38,242  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:38,242  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,243  INFO Injector:92 
2019-08-23 15:33:38,243  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:38,243  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@27e5efe7[Scopes.SINGLETON]
2019-08-23 15:33:38,243  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:38,243  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,243  INFO Injector:92 
2019-08-23 15:33:38,244  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:38,244  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@231bcc02[Scopes.SINGLETON]
2019-08-23 15:33:38,244  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:38,244  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,244  INFO Injector:92 
2019-08-23 15:33:38,244  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:38,245  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@21e034b9[Scopes.SINGLETON]
2019-08-23 15:33:38,245  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:38,245  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,246  INFO Injector:92 
2019-08-23 15:33:38,246  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:38,247  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@66412248[Scopes.SINGLETON]
2019-08-23 15:33:38,247  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:38,248  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,248  INFO Injector:92 
2019-08-23 15:33:38,248  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:38,248  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2a63ec25[Scopes.SINGLETON]
2019-08-23 15:33:38,249  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:38,249  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,249  INFO Injector:92 
2019-08-23 15:33:38,249  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:38,249  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5868cf79[Scopes.SINGLETON]
2019-08-23 15:33:38,249  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:38,250  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:38,250  INFO Injector:92 
2019-08-23 15:33:38,250  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:38,250  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:38,250  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:38,251  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:38,251  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:38,280  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:38,283  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:38,284  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-08-23 15:33:38,284  INFO Gbl:54 used RAM: 468338168B = 457361kB = 446MB  free: 188070408B = 179MB  total: 656408576B = 626MB
2019-08-23 15:33:38,568  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:38,568  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:38,568  INFO Gbl:54 used RAM: 474542472B = 463420kB = 452MB  free: 181866104B = 173MB  total: 656408576B = 626MB
2019-08-23 15:33:38,760  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:38,760  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:38,760  INFO Gbl:54 used RAM: 481196592B = 469918kB = 458MB  free: 175211984B = 167MB  total: 656408576B = 626MB
2019-08-23 15:33:38,846  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.109375sec
2019-08-23 15:33:38,846  INFO AbstractController$8:215 ### ITERATION 4 fires after mobsim event
2019-08-23 15:33:38,846  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:38,848  INFO LegTimesControlerListener:50 [4] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:38,848  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:38,848  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:38,849  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:38,850  INFO ControlerListenerManagerImpl:251 [it.4] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:38,851  INFO AbstractController$4:152 ### ITERATION 4 fires scoring event
2019-08-23 15:33:38,851  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:38,851  INFO NewScoreAssignerImpl:36 it: 4 msaStart: null
2019-08-23 15:33:38,851  INFO ControlerListenerManagerImpl:194 [it.4] all ControlerScoringListeners called.
2019-08-23 15:33:38,851  INFO AbstractController$5:160 ### ITERATION 4 fires iteration end event
2019-08-23 15:33:38,851  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:38,854  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:38,855  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:38,855  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:38,855  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:38,855  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:38,856  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:38,856  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:38,856  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:38,856  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:38,856  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:38,857  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:39,023  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:39,023  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98369609724675
2019-08-23 15:33:39,023  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.979278594670554
2019-08-23 15:33:39,023  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.98142760138053
2019-08-23 15:33:39,023  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.98384102478298
2019-08-23 15:33:39,093  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:39,093  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:39,094  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:39,094  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70538.8832236186
2019-08-23 15:33:39,094  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:39,094  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:39,166  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:39,169  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:39,169  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:39,406  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:39,406  INFO ControlerListenerManagerImpl:171 [it.4] all ControlerIterationEndsListeners called.
2019-08-23 15:33:39,512  INFO AbstractController:170 ### ITERATION 4 ENDS
2019-08-23 15:33:39,512  INFO AbstractController:171 ###################################################
2019-08-23 15:33:39,513  INFO AbstractController:126 ###################################################
2019-08-23 15:33:39,513  INFO AbstractController:127 ### ITERATION 5 BEGINS
2019-08-23 15:33:39,514  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:39,514  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:39,514  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-08-23 15:33:39,514  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-08-23 15:33:39,514  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-08-23 15:33:39,515  INFO ControlerListenerManagerImpl:148 [it.5] all ControlerIterationStartsListeners called.
2019-08-23 15:33:39,515  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-08-23 15:33:39,515 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:39,516 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-08-23 15:33:39,516  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 44 plans handled. Strategy: BestPlanSelector
2019-08-23 15:33:39,517  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 2 plans
2019-08-23 15:33:39,527  INFO Counter:61 [PlanRouter] handled plan # 1
2019-08-23 15:33:39,531  INFO Counter:61 [PlanRouter] handled plan # 2
2019-08-23 15:33:39,531  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-08-23 15:33:39,531  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 2 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-08-23 15:33:39,531  INFO ControlerListenerManagerImpl:213 [it.5] all ControlerReplanningListeners called.
2019-08-23 15:33:39,531  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:39,531  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-08-23 15:33:39,532  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-08-23 15:33:39,555  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-08-23 15:33:39,555  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-08-23 15:33:39,555  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-08-23 15:33:39,556  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-08-23 15:33:39,556  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-08-23 15:33:39,556  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-08-23 15:33:39,557  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:39,557  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:39,557  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:39,557  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:39,558  INFO EventsManagerImpl:156 
2019-08-23 15:33:39,558  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:39,558  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-08-23 15:33:39,558  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-08-23 15:33:39,558  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-08-23 15:33:39,558  INFO EventsManagerImpl:156 
2019-08-23 15:33:39,558  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-08-23 15:33:39,558  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-08-23 15:33:39,558  INFO ControlerListenerManagerImpl:232 [it.5] all ControlerBeforeMobsimListeners called.
2019-08-23 15:33:39,566  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:39,571  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:39,572  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-08-23 15:33:39,572  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-08-23 15:33:39,572  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-08-23 15:33:39,573  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-08-23 15:33:39,625  INFO Injector:80 === printInjector start ===
2019-08-23 15:33:39,625  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-08-23 15:33:39,626  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-08-23 15:33:39,626  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-08-23 15:33:39,626  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,626  INFO Injector:92 
2019-08-23 15:33:39,626  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-08-23 15:33:39,626  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@41447f2b}[Scopes.SINGLETON]
2019-08-23 15:33:39,627  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-08-23 15:33:39,627  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,627  INFO Injector:92 
2019-08-23 15:33:39,627  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-08-23 15:33:39,627  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6bdaf44c[Scopes.SINGLETON]}
2019-08-23 15:33:39,627  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-08-23 15:33:39,627  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-08-23 15:33:39,627  INFO Injector:92 
2019-08-23 15:33:39,627  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-08-23 15:33:39,628  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@75496ea6[Scopes.SINGLETON]
2019-08-23 15:33:39,628  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-08-23 15:33:39,628  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,628  INFO Injector:92 
2019-08-23 15:33:39,628  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-08-23 15:33:39,628  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1fcdde27[Scopes.SINGLETON]
2019-08-23 15:33:39,628  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-08-23 15:33:39,628  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,628  INFO Injector:92 
2019-08-23 15:33:39,629  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-08-23 15:33:39,629  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3e970481[Scopes.SINGLETON]
2019-08-23 15:33:39,629  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-08-23 15:33:39,629  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,629  INFO Injector:92 
2019-08-23 15:33:39,629  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-08-23 15:33:39,629  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7593f19b[Scopes.SINGLETON]
2019-08-23 15:33:39,630  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-08-23 15:33:39,630  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,630  INFO Injector:92 
2019-08-23 15:33:39,630  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-08-23 15:33:39,630  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@65418c1b[Scopes.SINGLETON]
2019-08-23 15:33:39,630  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-08-23 15:33:39,630  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,630  INFO Injector:92 
2019-08-23 15:33:39,630  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-08-23 15:33:39,631  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5130ac31[Scopes.SINGLETON]
2019-08-23 15:33:39,631  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-08-23 15:33:39,631  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,631  INFO Injector:92 
2019-08-23 15:33:39,631  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-08-23 15:33:39,631  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1b56fd72[Scopes.SINGLETON]
2019-08-23 15:33:39,631  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-08-23 15:33:39,632  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,632  INFO Injector:92 
2019-08-23 15:33:39,632  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-08-23 15:33:39,632  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6bdaf44c[Scopes.SINGLETON]
2019-08-23 15:33:39,632  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-08-23 15:33:39,632  INFO Injector:88   --> scope: eager singleton
2019-08-23 15:33:39,632  INFO Injector:92 
2019-08-23 15:33:39,632  INFO Injector:95 === printInjector end ===
2019-08-23 15:33:39,633  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-08-23 15:33:39,633  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-08-23 15:33:39,633  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-08-23 15:33:39,633  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-08-23 15:33:39,654  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-08-23 15:33:39,656  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=23
2019-08-23 15:33:39,657  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=46 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-08-23 15:33:39,657  INFO Gbl:54 used RAM: 387102328B = 378029kB = 369MB  free: 316492168B = 301MB  total: 703594496B = 671MB
2019-08-23 15:33:39,902  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=11 #nodes=1
2019-08-23 15:33:39,902  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=19 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:39,902  INFO Gbl:54 used RAM: 397800968B = 388477kB = 379MB  free: 305793528B = 291MB  total: 703594496B = 671MB
2019-08-23 15:33:40,065  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=2 #nodes=0
2019-08-23 15:33:40,066  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=3 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-08-23 15:33:40,066  INFO Gbl:54 used RAM: 400702064B = 391310kB = 382MB  free: 302892432B = 288MB  total: 703594496B = 671MB
2019-08-23 15:33:40,170  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.109375sec
2019-08-23 15:33:40,170  INFO AbstractController$8:215 ### ITERATION 5 fires after mobsim event
2019-08-23 15:33:40,171  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-08-23 15:33:40,173  INFO LegTimesControlerListener:50 [5] average trip (probably: leg) duration is: 3811 seconds = 01:03:31
2019-08-23 15:33:40,173  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-08-23 15:33:40,173  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24581][startTime=08:33:40][endTime=undefined][duration=undefined][facilityId=null]
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-08-23 15:33:40,174  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-08-23 15:33:40,175  INFO ControlerListenerManagerImpl:251 [it.5] all ControlerAfterMobsimListeners called.
2019-08-23 15:33:40,176  INFO AbstractController$4:152 ### ITERATION 5 fires scoring event
2019-08-23 15:33:40,177  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:40,177  INFO NewScoreAssignerImpl:36 it: 5 msaStart: null
2019-08-23 15:33:40,177  INFO ControlerListenerManagerImpl:194 [it.5] all ControlerScoringListeners called.
2019-08-23 15:33:40,178  INFO AbstractController$5:160 ### ITERATION 5 fires iteration end event
2019-08-23 15:33:40,178  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:40,188  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:40,188  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-08-23 15:33:40,188  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-08-23 15:33:40,190  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-08-23 15:33:40,190  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:40,191  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-08-23 15:33:40,191  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-08-23 15:33:40,191  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-08-23 15:33:40,191  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-08-23 15:33:40,192  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-08-23 15:33:40,192  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-08-23 15:33:40,282  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:40,283  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 57.98384102478298
2019-08-23 15:33:40,283  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 57.979278594670554
2019-08-23 15:33:40,283  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 57.98142760138053
2019-08-23 15:33:40,283  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 57.98384102478298
2019-08-23 15:33:40,353  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:40,354  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-08-23 15:33:40,355  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-08-23 15:33:40,355  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 70538.8832236186
2019-08-23 15:33:40,356  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-08-23 15:33:40,356  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-08-23 15:33:40,429  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-08-23 15:33:40,432  INFO LegHistogramListener:72 number of legs:	46	100%
2019-08-23 15:33:40,432  INFO LegHistogramListener:79 number of car legs:	46	100.0%
2019-08-23 15:33:40,671  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-08-23 15:33:40,672  INFO ControlerListenerManagerImpl:171 [it.5] all ControlerIterationEndsListeners called.
2019-08-23 15:33:40,792  INFO AbstractController:170 ### ITERATION 5 ENDS
2019-08-23 15:33:40,793  INFO AbstractController:171 ###################################################
2019-08-23 15:33:40,793  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2019-08-23 15:33:40,793  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-08-23 15:33:40,793  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2019-08-23 15:33:40,795  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-08-23 15:33:40,795  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-08-23 15:33:40,796  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-08-23 15:33:40,798  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-08-23 15:33:40,799  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-08-23 15:33:40,803  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-08-23 15:33:40,807  INFO PopulationWriter:139 Population written to: ./output/output_plans.xml.gz
2019-08-23 15:33:40,808  INFO Counter:67 [PopulationWriter] dumped person # 46
2019-08-23 15:33:40,833  INFO NetworkWriter:68 Writing network to file: ./output/output_network.xml.gz...
2019-08-23 15:33:41,664  INFO NetworkWriter:71 done.
2019-08-23 15:33:41,664  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-08-23 15:33:41,712  INFO VehicleWriterV1:55 Vehicles written to: ./output/output_vehicles.xml.gz
2019-08-23 15:33:41,715  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2019-08-23 15:33:41,751  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2019-08-23 15:33:41,752  INFO LanesWriter:74 writing to file: ./output/output_lanes.xml.gz
2019-08-23 15:33:42,187  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2019-08-23 15:33:42,187  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2019-08-23 15:33:42,188  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-08-23 15:33:42,189  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2019-08-23 15:33:42,189  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2019-08-23 15:33:42,190  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
