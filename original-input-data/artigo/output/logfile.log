2019-09-03 13:41:21,622  INFO Gbl:59 JVM: 1.8.0_211; Oracle Corporation; mixed mode; 64-bit
2019-09-03 13:41:21,623  INFO Gbl:63 OS: Windows 10; 10.0; amd64
2019-09-03 13:41:21,624  INFO Gbl:66 CPU cores: 4
2019-09-03 13:41:21,624  INFO Gbl:67 max. Memory: 3556.0MB (3728736256B)
2019-09-03 13:41:21,626  INFO Gbl:105 MATSim-Build: r2e52cf1f54a31596d20f378d536f9dd7a0a860bb (2018-08-25 22:17:05)
2019-09-03 13:41:21,637  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:21,639  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:21,650 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:21,654  INFO NetworkImpl:167  node # 1
2019-09-03 13:41:21,655  INFO NetworkImpl:167  node # 4
2019-09-03 13:41:21,655  INFO NetworkImpl:167  node # 16
2019-09-03 13:41:21,656  INFO NetworkImpl:167  node # 64
2019-09-03 13:41:21,658  INFO NetworkImpl:167  node # 256
2019-09-03 13:41:21,679  INFO NetworkImpl:167  node # 1024
2019-09-03 13:41:21,689  INFO NetworkImpl:167  node # 4096
2019-09-03 13:41:21,700  INFO NetworkImpl:167  node # 16384
2019-09-03 13:41:21,702  INFO NetworkImpl:163  link # 1
2019-09-03 13:41:21,703  INFO NetworkImpl:163  link # 4
2019-09-03 13:41:21,705  INFO NetworkImpl:163  link # 16
2019-09-03 13:41:21,708  INFO NetworkImpl:163  link # 64
2019-09-03 13:41:21,751  INFO NetworkImpl:163  link # 256
2019-09-03 13:41:21,754  INFO NetworkImpl:163  link # 1024
2019-09-03 13:41:21,769  INFO NetworkImpl:163  link # 4096
2019-09-03 13:41:21,824  INFO NetworkImpl:163  link # 16384
2019-09-03 13:41:21,893  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:21,894  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2019-09-03 13:41:21,896  INFO ControlerUtils:58 config dump before iterations start
2019-09-03 13:41:21,902  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-09-03 13:41:21,925  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="5" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="./output" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="EPSG:2782" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="artigo.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="mov" />
				<param name="closingTime" value="13:30:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="07:40:00" />
				<param name="minimalDuration" value="00:10:00" />
				<param name="openingTime" value="07:30:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="00:30:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="shelter" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="08:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="20:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="population_before.xml.gz" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="23:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="07:00:00" />
		<param name="startTime" value="06:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2019-09-03 13:41:21,942  INFO ControlerUtils:63 Complete config dump done.
2019-09-03 13:41:21,942  INFO ControlerUtils:64 Checking consistency of config...
2019-09-03 13:41:21,944  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2019-09-03 13:41:21,945  INFO ControlerUtils:66 Checking consistency of config done.
2019-09-03 13:41:21,965 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:21,978 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:22,008  INFO NetworkImpl:426 building QuadTree for nodes: xrange(443131.1248588478,570436.5846525345); yrange(9000.250507828903,158428.51607133824)
2019-09-03 13:41:22,066  INFO NetworkImpl:435 Building QuadTree took 0.07 seconds.
2019-09-03 13:41:22,616  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2019-09-03 13:41:22,690  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2019-09-03 13:41:22,752  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2019-09-03 13:41:22,852  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2019-09-03 13:41:22,983  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2019-09-03 13:41:23,479  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2019-09-03 13:41:23,652  INFO Counter:67 [PersonPrepareForSim] handled person # 50
2019-09-03 13:41:23,653  INFO Counter:61  vehicles # 1
2019-09-03 13:41:23,653  INFO Counter:61  vehicles # 2
2019-09-03 13:41:23,653  INFO Counter:61  vehicles # 4
2019-09-03 13:41:23,654  INFO Counter:61  vehicles # 8
2019-09-03 13:41:23,654  INFO Counter:61  vehicles # 16
2019-09-03 13:41:23,654  INFO Counter:61  vehicles # 32
2019-09-03 13:41:23,665  INFO AbstractController:126 ###################################################
2019-09-03 13:41:23,665  INFO AbstractController:127 ### ITERATION 0 BEGINS
2019-09-03 13:41:23,668  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:23,668  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:23,668  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:23,668  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:23,668  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:23,678  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2019-09-03 13:41:23,679  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:23,679  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:23,679  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:23,704  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:23,704  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:23,704  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:23,704  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:23,704  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:23,705  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:23,709  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:23,710  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:23,710  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:23,710  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:23,710  INFO EventsManagerImpl:156 
2019-09-03 13:41:23,710  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:23,710  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:23,710  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:23,711  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:23,711  INFO EventsManagerImpl:156 
2019-09-03 13:41:23,711  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:23,711  INFO PlansDumpingImpl:75 dumping plans...
2019-09-03 13:41:23,723  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:41:23,724  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:41:23,725  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:41:23,729  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:41:23,733  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:41:23,739  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-03 13:41:23,753  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.0/0.plans.xml.gz
2019-09-03 13:41:23,774  INFO Counter:67 [PopulationWriter] dumped person # 50
2019-09-03 13:41:23,774  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-03 13:41:23,774  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:23,775  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:23,840  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:23,840  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:23,841  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:23,841  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:23,842  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:23,842  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:23,992  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:23,992  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:23,995  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:23,995  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:23,995  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:23,996  INFO Injector:92 
2019-09-03 13:41:23,996  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:23,996  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@47f9738}[Scopes.SINGLETON]
2019-09-03 13:41:23,997  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:23,999  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:23,999  INFO Injector:92 
2019-09-03 13:41:23,999  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:24,000  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2dcd168a[Scopes.SINGLETON]}
2019-09-03 13:41:24,000  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:24,001  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:24,001  INFO Injector:92 
2019-09-03 13:41:24,001  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:24,002  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@62ef27a8[Scopes.SINGLETON]
2019-09-03 13:41:24,002  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:24,002  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,003  INFO Injector:92 
2019-09-03 13:41:24,003  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:24,003  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@16fdec90[Scopes.SINGLETON]
2019-09-03 13:41:24,003  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:24,004  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,004  INFO Injector:92 
2019-09-03 13:41:24,004  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:24,005  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@51acdf2e[Scopes.SINGLETON]
2019-09-03 13:41:24,005  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:24,006  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,006  INFO Injector:92 
2019-09-03 13:41:24,006  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:24,007  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7ac0e420[Scopes.SINGLETON]
2019-09-03 13:41:24,007  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:24,008  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,008  INFO Injector:92 
2019-09-03 13:41:24,009  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:24,009  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4c51cf28[Scopes.SINGLETON]
2019-09-03 13:41:24,009  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:24,009  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,010  INFO Injector:92 
2019-09-03 13:41:24,010  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:24,012  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3e7dd664[Scopes.SINGLETON]
2019-09-03 13:41:24,012  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:24,013  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,013  INFO Injector:92 
2019-09-03 13:41:24,013  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:24,014  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4f25b795[Scopes.SINGLETON]
2019-09-03 13:41:24,014  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:24,014  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,016  INFO Injector:92 
2019-09-03 13:41:24,016  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:24,017  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2dcd168a[Scopes.SINGLETON]
2019-09-03 13:41:24,017  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:24,017  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:24,018  INFO Injector:92 
2019-09-03 13:41:24,018  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:24,018  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:24,019  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:24,019  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:24,019  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:24,082  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:24,085  INFO EventsManagerImpl:134  event # 1
2019-09-03 13:41:24,090  INFO EventsManagerImpl:134  event # 4
2019-09-03 13:41:24,094  INFO EventsManagerImpl:134  event # 16
2019-09-03 13:41:24,097  INFO EventsManagerImpl:134  event # 64
2019-09-03 13:41:24,102  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:24,102  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:24,103  INFO Gbl:54 used RAM: 320715080B = 313198kB = 305MB  free: 278021816B = 265MB  total: 598736896B = 571MB
2019-09-03 13:41:24,118  INFO EventsManagerImpl:134  event # 256
2019-09-03 13:41:24,196  INFO EventsManagerImpl:134  event # 1024
2019-09-03 13:41:24,335  INFO EventsManagerImpl:134  event # 4096
2019-09-03 13:41:24,652  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=22 #nodes=2
2019-09-03 13:41:24,652  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:24,652  INFO Gbl:54 used RAM: 329942752B = 322209kB = 314MB  free: 268794144B = 256MB  total: 598736896B = 571MB
2019-09-03 13:41:24,800  INFO EventsManagerImpl:134  event # 16384
2019-09-03 13:41:24,973  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:24,973  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=1s; (s/r): 7200.0
2019-09-03 13:41:24,973  INFO Gbl:54 used RAM: 338939392B = 330995kB = 323MB  free: 259797504B = 247MB  total: 598736896B = 571MB
2019-09-03 13:41:25,296  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.421875sec
2019-09-03 13:41:25,302  INFO AbstractController$8:215 ### ITERATION 0 fires after mobsim event
2019-09-03 13:41:25,303  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:25,310  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 4660 seconds = 01:17:40
2019-09-03 13:41:25,312  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:25,313  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:25,319  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:25,320  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:25,320  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:25,321  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:41][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:25,359  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:25,359  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:25,361  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:25,364  INFO AbstractController$4:152 ### ITERATION 0 fires scoring event
2019-09-03 13:41:25,368  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:25,372  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2019-09-03 13:41:25,375  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2019-09-03 13:41:25,377  INFO AbstractController$5:160 ### ITERATION 0 fires iteration end event
2019-09-03 13:41:25,377  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:25,388  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:25,389  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:25,389  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:25,390  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:25,390  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:25,391  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:25,392  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:25,392  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:25,392  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:25,393  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:25,393  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:25,393  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:25,394  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.34952313115473
2019-09-03 13:41:25,394  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34952313115473
2019-09-03 13:41:25,394  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34952313115473
2019-09-03 13:41:25,395  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.34952313115473
2019-09-03 13:41:25,399  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:25,401  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:25,402  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:25,403  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90325.30512414747
2019-09-03 13:41:25,403  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:25,403  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:25,404  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:25,428  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:25,428  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:26,229  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:26,232  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2019-09-03 13:41:26,500  INFO AbstractController:170 ### ITERATION 0 ENDS
2019-09-03 13:41:26,501  INFO AbstractController:171 ###################################################
2019-09-03 13:41:26,501  INFO AbstractController:126 ###################################################
2019-09-03 13:41:26,502  INFO AbstractController:127 ### ITERATION 1 BEGINS
2019-09-03 13:41:26,503  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:26,504  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:26,504  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:26,507  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:26,510  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:26,516  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2019-09-03 13:41:26,520  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:41:26,526 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:26,530 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:26,536 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:26,539 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:26,545  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 38 plans handled. Strategy: BestPlanSelector
2019-09-03 13:41:26,553  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:41:26,600  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:26,612  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:26,659  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:26,688  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:26,688  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:26,689  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 7 plans
2019-09-03 13:41:26,761  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:26,776  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:26,782  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:26,836  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:26,836  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 7 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:26,836  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2019-09-03 13:41:26,836  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:26,837  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:26,837  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:26,862  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:26,862  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:26,862  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:26,862  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:26,863  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:26,863  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:26,865  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:26,865  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:26,866  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:26,866  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:26,866  INFO EventsManagerImpl:156 
2019-09-03 13:41:26,866  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:26,866  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:26,866  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:26,866  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:26,866  INFO EventsManagerImpl:156 
2019-09-03 13:41:26,867  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:26,867  INFO PlansDumpingImpl:75 dumping plans...
2019-09-03 13:41:26,870  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:41:26,870  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:41:26,871  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:41:26,873  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:41:26,877  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:41:26,884  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-03 13:41:26,890  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.1/1.plans.xml.gz
2019-09-03 13:41:26,897  INFO Counter:67 [PopulationWriter] dumped person # 50
2019-09-03 13:41:26,898  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-03 13:41:26,898  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:26,899  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:26,912  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:26,913  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:26,916  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:26,917  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:26,918  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:26,919  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:26,992  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:26,992  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:26,993  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:26,993  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:26,993  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:26,993  INFO Injector:92 
2019-09-03 13:41:26,993  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:26,994  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@10260f02}[Scopes.SINGLETON]
2019-09-03 13:41:26,994  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:26,994  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:26,994  INFO Injector:92 
2019-09-03 13:41:26,994  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:26,994  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@156b3428[Scopes.SINGLETON]}
2019-09-03 13:41:26,995  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:26,995  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:26,995  INFO Injector:92 
2019-09-03 13:41:26,995  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:26,995  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7e3f4f0[Scopes.SINGLETON]
2019-09-03 13:41:26,995  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:26,996  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:26,996  INFO Injector:92 
2019-09-03 13:41:26,996  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:26,996  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@67b68dc3[Scopes.SINGLETON]
2019-09-03 13:41:26,996  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:26,996  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:26,997  INFO Injector:92 
2019-09-03 13:41:26,997  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:26,997  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4f2e6db7[Scopes.SINGLETON]
2019-09-03 13:41:26,998  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:26,999  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:26,999  INFO Injector:92 
2019-09-03 13:41:26,999  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:26,999  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3f6094da[Scopes.SINGLETON]
2019-09-03 13:41:27,000  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:27,000  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:27,000  INFO Injector:92 
2019-09-03 13:41:27,000  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:27,001  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1db30771[Scopes.SINGLETON]
2019-09-03 13:41:27,001  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:27,001  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:27,001  INFO Injector:92 
2019-09-03 13:41:27,001  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:27,001  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@69160a0c[Scopes.SINGLETON]
2019-09-03 13:41:27,001  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:27,001  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:27,002  INFO Injector:92 
2019-09-03 13:41:27,002  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:27,002  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6ad259d[Scopes.SINGLETON]
2019-09-03 13:41:27,002  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:27,002  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:27,003  INFO Injector:92 
2019-09-03 13:41:27,003  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:27,004  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@156b3428[Scopes.SINGLETON]
2019-09-03 13:41:27,004  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:27,004  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:27,005  INFO Injector:92 
2019-09-03 13:41:27,005  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:27,005  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:27,005  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:27,006  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:27,006  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:27,039  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:27,046  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:27,046  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:27,047  INFO Gbl:54 used RAM: 329514144B = 321791kB = 314MB  free: 311690080B = 297MB  total: 641204224B = 611MB
2019-09-03 13:41:27,335  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=22 #nodes=2
2019-09-03 13:41:27,336  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:27,336  INFO Gbl:54 used RAM: 336896368B = 329000kB = 321MB  free: 304307856B = 290MB  total: 641204224B = 611MB
2019-09-03 13:41:27,708  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:27,709  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:27,709  INFO Gbl:54 used RAM: 346319184B = 338202kB = 330MB  free: 294885040B = 281MB  total: 641204224B = 611MB
2019-09-03 13:41:27,895  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.296875sec
2019-09-03 13:41:27,895  INFO AbstractController$8:215 ### ITERATION 1 fires after mobsim event
2019-09-03 13:41:27,896  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:27,901  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 4660 seconds = 01:17:40
2019-09-03 13:41:27,902  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:27,902  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:27,902  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:27,903  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:27,903  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:27,903  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:41][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:27,903  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:27,903  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:27,904  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:27,905  INFO AbstractController$4:152 ### ITERATION 1 fires scoring event
2019-09-03 13:41:27,905  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:27,905  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2019-09-03 13:41:27,906  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2019-09-03 13:41:27,907  INFO AbstractController$5:160 ### ITERATION 1 fires iteration end event
2019-09-03 13:41:27,907  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:27,918  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:27,918  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:27,919  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:27,920  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:27,920  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:27,921  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:28,056  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:28,057  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.34843765646896
2019-09-03 13:41:28,057  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34843765646896
2019-09-03 13:41:28,057  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34898039381183
2019-09-03 13:41:28,057  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.34952313115473
2019-09-03 13:41:28,164  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:28,166  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:28,168  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:28,169  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90330.93582536913
2019-09-03 13:41:28,169  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:28,169  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:28,267  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:28,280  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:28,281  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:28,642  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:28,642  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2019-09-03 13:41:28,813  INFO AbstractController:170 ### ITERATION 1 ENDS
2019-09-03 13:41:28,813  INFO AbstractController:171 ###################################################
2019-09-03 13:41:28,814  INFO AbstractController:126 ###################################################
2019-09-03 13:41:28,814  INFO AbstractController:127 ### ITERATION 2 BEGINS
2019-09-03 13:41:28,816  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:28,817  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:28,817  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:28,817  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:28,818  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:28,818  INFO ControlerListenerManagerImpl:148 [it.2] all ControlerIterationStartsListeners called.
2019-09-03 13:41:28,819  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:41:28,820 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:28,822 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:28,825 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:28,834 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:28,837  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 40 plans handled. Strategy: BestPlanSelector
2019-09-03 13:41:28,838  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:41:28,903  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:28,971  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:29,021  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:29,158  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:29,158  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:29,159  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:41:29,188  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:29,242  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:29,286  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:29,289  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:29,290  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:29,290  INFO ControlerListenerManagerImpl:213 [it.2] all ControlerReplanningListeners called.
2019-09-03 13:41:29,290  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:29,290  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:29,290  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:29,333  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:29,336  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:29,337  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:29,337  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:29,337  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:29,337  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:29,341  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:29,343  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:29,343  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:29,343  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:29,344  INFO EventsManagerImpl:156 
2019-09-03 13:41:29,344  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:29,344  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:29,344  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:29,345  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:29,346  INFO EventsManagerImpl:156 
2019-09-03 13:41:29,346  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:29,346  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:29,347  INFO ControlerListenerManagerImpl:232 [it.2] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:29,365  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:29,367  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:29,367  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:29,368  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:29,368  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:29,369  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:29,461  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:29,462  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:29,462  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:29,462  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:29,463  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,463  INFO Injector:92 
2019-09-03 13:41:29,463  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:29,464  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@63410ea9}[Scopes.SINGLETON]
2019-09-03 13:41:29,465  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:29,465  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,465  INFO Injector:92 
2019-09-03 13:41:29,466  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:29,468  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@509ab3b0[Scopes.SINGLETON]}
2019-09-03 13:41:29,469  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:29,469  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:29,469  INFO Injector:92 
2019-09-03 13:41:29,469  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:29,470  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@63c6a639[Scopes.SINGLETON]
2019-09-03 13:41:29,471  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:29,471  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,471  INFO Injector:92 
2019-09-03 13:41:29,471  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:29,472  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@69a1186c[Scopes.SINGLETON]
2019-09-03 13:41:29,472  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:29,473  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,473  INFO Injector:92 
2019-09-03 13:41:29,473  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:29,474  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7d71285c[Scopes.SINGLETON]
2019-09-03 13:41:29,474  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:29,474  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,475  INFO Injector:92 
2019-09-03 13:41:29,475  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:29,476  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@30ad3219[Scopes.SINGLETON]
2019-09-03 13:41:29,476  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:29,476  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,476  INFO Injector:92 
2019-09-03 13:41:29,476  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:29,476  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@44482774[Scopes.SINGLETON]
2019-09-03 13:41:29,477  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:29,477  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,477  INFO Injector:92 
2019-09-03 13:41:29,477  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:29,479  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@36010af3[Scopes.SINGLETON]
2019-09-03 13:41:29,480  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:29,480  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,481  INFO Injector:92 
2019-09-03 13:41:29,482  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:29,486  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5d7adc2c[Scopes.SINGLETON]
2019-09-03 13:41:29,486  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:29,487  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,487  INFO Injector:92 
2019-09-03 13:41:29,487  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:29,490  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@509ab3b0[Scopes.SINGLETON]
2019-09-03 13:41:29,492  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:29,494  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:29,495  INFO Injector:92 
2019-09-03 13:41:29,495  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:29,495  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:29,498  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:29,499  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:29,499  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:29,546  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:29,552  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:29,552  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:29,553  INFO Gbl:54 used RAM: 304249576B = 297118kB = 290MB  free: 339051800B = 323MB  total: 643301376B = 613MB
2019-09-03 13:41:29,913  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=21 #nodes=3
2019-09-03 13:41:29,914  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:29,914  INFO Gbl:54 used RAM: 315682160B = 308283kB = 301MB  free: 327619216B = 312MB  total: 643301376B = 613MB
2019-09-03 13:41:30,149  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:30,149  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:30,149  INFO Gbl:54 used RAM: 320741768B = 313224kB = 305MB  free: 322559608B = 307MB  total: 643301376B = 613MB
2019-09-03 13:41:30,325  INFO AbstractController$8:215 ### ITERATION 2 fires after mobsim event
2019-09-03 13:41:30,325  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:30,325  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.234375sec
2019-09-03 13:41:30,335  INFO LegTimesControlerListener:50 [2] average trip (probably: leg) duration is: 4660 seconds = 01:17:40
2019-09-03 13:41:30,335  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:30,336  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:30,337  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:30,337  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:30,337  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:30,337  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:41][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:30,338  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:30,338  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:30,340  INFO ControlerListenerManagerImpl:251 [it.2] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:30,340  INFO AbstractController$4:152 ### ITERATION 2 fires scoring event
2019-09-03 13:41:30,340  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:30,340  INFO NewScoreAssignerImpl:36 it: 2 msaStart: null
2019-09-03 13:41:30,341  INFO ControlerListenerManagerImpl:194 [it.2] all ControlerScoringListeners called.
2019-09-03 13:41:30,344  INFO AbstractController$5:160 ### ITERATION 2 fires iteration end event
2019-09-03 13:41:30,345  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:30,361  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:30,361  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:30,361  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:30,362  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:30,362  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:30,363  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:30,363  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:30,363  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:30,363  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:30,364  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:30,364  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:30,590  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:30,591  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.34712826607874
2019-09-03 13:41:30,591  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34500937304338
2019-09-03 13:41:30,591  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34778296127384
2019-09-03 13:41:30,591  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.35055654950433
2019-09-03 13:41:30,937  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:30,938  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:30,958  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:30,959  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90292.44920532849
2019-09-03 13:41:30,959  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:30,959  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:31,117  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:31,149  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:31,150  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:31,588  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:31,588  INFO ControlerListenerManagerImpl:171 [it.2] all ControlerIterationEndsListeners called.
2019-09-03 13:41:31,817  INFO AbstractController:170 ### ITERATION 2 ENDS
2019-09-03 13:41:31,818  INFO AbstractController:171 ###################################################
2019-09-03 13:41:31,819  INFO AbstractController:126 ###################################################
2019-09-03 13:41:31,819  INFO AbstractController:127 ### ITERATION 3 BEGINS
2019-09-03 13:41:31,827  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:31,828  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:31,828  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:31,829  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:31,829  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:31,830  INFO ControlerListenerManagerImpl:148 [it.3] all ControlerIterationStartsListeners called.
2019-09-03 13:41:31,830  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:41:31,831 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:31,832 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:31,833 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:31,834 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:31,837  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 37 plans handled. Strategy: BestPlanSelector
2019-09-03 13:41:31,837  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 7 plans
2019-09-03 13:41:31,909  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:31,927  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:31,941  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:32,028  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:32,028  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 7 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:32,028  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 6 plans
2019-09-03 13:41:32,059  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:32,073  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:32,142  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:32,187  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:32,187  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 6 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:32,187  INFO ControlerListenerManagerImpl:213 [it.3] all ControlerReplanningListeners called.
2019-09-03 13:41:32,187  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:32,187  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:32,187  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:32,215  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:32,215  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:32,215  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:32,216  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:32,216  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:32,216  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:32,219  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:32,219  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:32,223  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:32,223  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:32,224  INFO EventsManagerImpl:156 
2019-09-03 13:41:32,224  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:32,224  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:32,224  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:32,224  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:32,224  INFO EventsManagerImpl:156 
2019-09-03 13:41:32,226  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:32,227  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:32,227  INFO ControlerListenerManagerImpl:232 [it.3] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:32,245  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:32,246  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:32,246  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:32,247  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:32,247  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:32,249  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:32,410  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:32,410  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:32,411  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:32,411  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:32,411  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,411  INFO Injector:92 
2019-09-03 13:41:32,411  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:32,412  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1c036772}[Scopes.SINGLETON]
2019-09-03 13:41:32,412  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:32,412  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,412  INFO Injector:92 
2019-09-03 13:41:32,412  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:32,412  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@246ba501[Scopes.SINGLETON]}
2019-09-03 13:41:32,412  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:32,413  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:32,413  INFO Injector:92 
2019-09-03 13:41:32,413  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:32,413  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4c0bf80d[Scopes.SINGLETON]
2019-09-03 13:41:32,413  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:32,413  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,415  INFO Injector:92 
2019-09-03 13:41:32,416  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:32,417  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@ff13f3[Scopes.SINGLETON]
2019-09-03 13:41:32,417  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:32,417  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,417  INFO Injector:92 
2019-09-03 13:41:32,417  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:32,420  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@370c1ea2[Scopes.SINGLETON]
2019-09-03 13:41:32,421  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:32,421  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,423  INFO Injector:92 
2019-09-03 13:41:32,424  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:32,425  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@13003b60[Scopes.SINGLETON]
2019-09-03 13:41:32,425  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:32,425  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,425  INFO Injector:92 
2019-09-03 13:41:32,425  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:32,425  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1c9db049[Scopes.SINGLETON]
2019-09-03 13:41:32,426  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:32,426  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,428  INFO Injector:92 
2019-09-03 13:41:32,429  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:32,430  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@39b94a95[Scopes.SINGLETON]
2019-09-03 13:41:32,435  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:32,444  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,444  INFO Injector:92 
2019-09-03 13:41:32,448  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:32,449  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@28f2c115[Scopes.SINGLETON]
2019-09-03 13:41:32,449  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:32,450  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,450  INFO Injector:92 
2019-09-03 13:41:32,450  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:32,451  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@246ba501[Scopes.SINGLETON]
2019-09-03 13:41:32,451  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:32,451  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:32,454  INFO Injector:92 
2019-09-03 13:41:32,456  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:32,456  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:32,458  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:32,459  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:32,460  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:32,524  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:32,555  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:32,555  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:32,555  INFO Gbl:54 used RAM: 285556608B = 278863kB = 272MB  free: 363511936B = 346MB  total: 649068544B = 619MB
2019-09-03 13:41:32,563  INFO EventsManagerImpl:134  event # 65536
2019-09-03 13:41:32,855  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=21 #nodes=3
2019-09-03 13:41:32,855  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:32,855  INFO Gbl:54 used RAM: 292302712B = 285451kB = 278MB  free: 356765832B = 340MB  total: 649068544B = 619MB
2019-09-03 13:41:33,110  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:33,110  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:33,110  INFO Gbl:54 used RAM: 300977928B = 293923kB = 287MB  free: 348090616B = 331MB  total: 649068544B = 619MB
2019-09-03 13:41:33,281  INFO AbstractController$8:215 ### ITERATION 3 fires after mobsim event
2019-09-03 13:41:33,281  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:33,281  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.296875sec
2019-09-03 13:41:33,288  INFO LegTimesControlerListener:50 [3] average trip (probably: leg) duration is: 4659 seconds = 01:17:39
2019-09-03 13:41:33,289  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:33,289  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:33,289  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:33,289  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:33,289  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:33,290  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:48][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:33,290  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:33,290  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:33,291  INFO ControlerListenerManagerImpl:251 [it.3] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:33,291  INFO AbstractController$4:152 ### ITERATION 3 fires scoring event
2019-09-03 13:41:33,291  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:33,291  INFO NewScoreAssignerImpl:36 it: 3 msaStart: null
2019-09-03 13:41:33,292  INFO ControlerListenerManagerImpl:194 [it.3] all ControlerScoringListeners called.
2019-09-03 13:41:33,292  INFO AbstractController$5:160 ### ITERATION 3 fires iteration end event
2019-09-03 13:41:33,292  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:33,312  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:33,313  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:33,313  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:33,313  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:33,314  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:33,320  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:33,320  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:33,321  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:33,321  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:33,321  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:33,321  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:33,552  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:33,552  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.34973368762316
2019-09-03 13:41:33,552  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34464270637673
2019-09-03 13:41:33,552  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34761248429366
2019-09-03 13:41:33,553  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.350823216171
2019-09-03 13:41:33,758  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:33,758  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:33,760  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:33,761  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90260.03242683123
2019-09-03 13:41:33,761  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:33,761  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:34,030  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:34,065  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:34,065  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:34,532  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:34,532  INFO ControlerListenerManagerImpl:171 [it.3] all ControlerIterationEndsListeners called.
2019-09-03 13:41:34,770  INFO AbstractController:170 ### ITERATION 3 ENDS
2019-09-03 13:41:34,770  INFO AbstractController:171 ###################################################
2019-09-03 13:41:34,770  INFO AbstractController:126 ###################################################
2019-09-03 13:41:34,772  INFO AbstractController:127 ### ITERATION 4 BEGINS
2019-09-03 13:41:34,775  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:34,775  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:34,775  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:34,776  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:34,776  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:34,777  INFO ControlerListenerManagerImpl:148 [it.4] all ControlerIterationStartsListeners called.
2019-09-03 13:41:34,777  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:41:34,779 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:34,779 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:34,780 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:34,782 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:34,785  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 39 plans handled. Strategy: BestPlanSelector
2019-09-03 13:41:34,785  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 7 plans
2019-09-03 13:41:34,842  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:34,859  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:34,898  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:34,974  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:34,975  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 7 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:34,975  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 4 plans
2019-09-03 13:41:34,992  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:35,004  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:35,049  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:41:35,053  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:35,053  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 4 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:35,053  INFO ControlerListenerManagerImpl:213 [it.4] all ControlerReplanningListeners called.
2019-09-03 13:41:35,053  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:35,054  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:35,054  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:35,077  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:35,078  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:35,078  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:35,078  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:35,078  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:35,078  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:35,080  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:35,080  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:35,080  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:35,081  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:35,081  INFO EventsManagerImpl:156 
2019-09-03 13:41:35,082  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:35,082  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:35,082  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:35,082  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:35,082  INFO EventsManagerImpl:156 
2019-09-03 13:41:35,082  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:35,082  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:35,083  INFO ControlerListenerManagerImpl:232 [it.4] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:35,115  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:35,115  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:35,116  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:35,116  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:35,117  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:35,119  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:35,208  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:35,209  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:35,215  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:35,216  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:35,216  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,219  INFO Injector:92 
2019-09-03 13:41:35,221  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:35,221  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@69121da8}[Scopes.SINGLETON]
2019-09-03 13:41:35,221  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:35,221  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,222  INFO Injector:92 
2019-09-03 13:41:35,223  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:35,225  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6bf8a4b4[Scopes.SINGLETON]}
2019-09-03 13:41:35,226  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:35,226  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:35,226  INFO Injector:92 
2019-09-03 13:41:35,226  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:35,227  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@24907627[Scopes.SINGLETON]
2019-09-03 13:41:35,228  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:35,228  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,228  INFO Injector:92 
2019-09-03 13:41:35,229  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:35,230  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5b3e6e3c[Scopes.SINGLETON]
2019-09-03 13:41:35,234  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:35,234  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,236  INFO Injector:92 
2019-09-03 13:41:35,236  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:35,236  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6527f688[Scopes.SINGLETON]
2019-09-03 13:41:35,236  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:35,237  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,237  INFO Injector:92 
2019-09-03 13:41:35,237  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:35,238  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@40bd9999[Scopes.SINGLETON]
2019-09-03 13:41:35,238  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:35,238  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,238  INFO Injector:92 
2019-09-03 13:41:35,239  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:35,244  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@496a1ba2[Scopes.SINGLETON]
2019-09-03 13:41:35,244  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:35,245  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,245  INFO Injector:92 
2019-09-03 13:41:35,246  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:35,246  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6e8b8056[Scopes.SINGLETON]
2019-09-03 13:41:35,246  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:35,246  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,248  INFO Injector:92 
2019-09-03 13:41:35,252  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:35,252  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@26b6bb9b[Scopes.SINGLETON]
2019-09-03 13:41:35,253  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:35,253  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,253  INFO Injector:92 
2019-09-03 13:41:35,254  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:35,255  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6bf8a4b4[Scopes.SINGLETON]
2019-09-03 13:41:35,255  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:35,255  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:35,255  INFO Injector:92 
2019-09-03 13:41:35,255  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:35,256  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:35,258  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:35,258  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:35,258  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:35,306  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:35,317  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:35,320  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:35,320  INFO Gbl:54 used RAM: 447439544B = 436952kB = 426MB  free: 201629000B = 192MB  total: 649068544B = 619MB
2019-09-03 13:41:35,558  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=21 #nodes=3
2019-09-03 13:41:35,558  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:35,558  INFO Gbl:54 used RAM: 454185584B = 443540kB = 433MB  free: 194882960B = 185MB  total: 649068544B = 619MB
2019-09-03 13:41:35,828  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:35,828  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:35,829  INFO Gbl:54 used RAM: 281816808B = 275211kB = 268MB  free: 379834648B = 362MB  total: 661651456B = 631MB
2019-09-03 13:41:36,000  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.203125sec
2019-09-03 13:41:36,000  INFO AbstractController$8:215 ### ITERATION 4 fires after mobsim event
2019-09-03 13:41:36,001  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:36,006  INFO LegTimesControlerListener:50 [4] average trip (probably: leg) duration is: 4660 seconds = 01:17:40
2019-09-03 13:41:36,006  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:36,006  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:41][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:36,007  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:36,008  INFO ControlerListenerManagerImpl:251 [it.4] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:36,008  INFO AbstractController$4:152 ### ITERATION 4 fires scoring event
2019-09-03 13:41:36,008  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:36,009  INFO NewScoreAssignerImpl:36 it: 4 msaStart: null
2019-09-03 13:41:36,009  INFO ControlerListenerManagerImpl:194 [it.4] all ControlerScoringListeners called.
2019-09-03 13:41:36,009  INFO AbstractController$5:160 ### ITERATION 4 fires iteration end event
2019-09-03 13:41:36,009  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:36,020  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:36,021  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:36,021  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:36,021  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:36,021  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:36,022  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:36,022  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:36,022  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:36,023  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:36,023  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:36,023  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:36,171  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:36,171  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.3481329983639
2019-09-03 13:41:36,172  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34195248856965
2019-09-03 13:41:36,172  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34638785237031
2019-09-03 13:41:36,172  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.350823216171
2019-09-03 13:41:36,321  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:36,322  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:36,332  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:36,332  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90241.73445900237
2019-09-03 13:41:36,332  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:36,332  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:36,475  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:36,488  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:36,488  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:36,967  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:36,967  INFO ControlerListenerManagerImpl:171 [it.4] all ControlerIterationEndsListeners called.
2019-09-03 13:41:37,174  INFO AbstractController:170 ### ITERATION 4 ENDS
2019-09-03 13:41:37,175  INFO AbstractController:171 ###################################################
2019-09-03 13:41:37,175  INFO AbstractController:126 ###################################################
2019-09-03 13:41:37,175  INFO AbstractController:127 ### ITERATION 5 BEGINS
2019-09-03 13:41:37,177  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:37,177  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:37,177  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:41:37,177  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:41:37,178  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:41:37,179  INFO ControlerListenerManagerImpl:148 [it.5] all ControlerIterationStartsListeners called.
2019-09-03 13:41:37,179  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:41:37,180 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:37,180 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:37,184 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:37,184 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:41:37,186  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 46 plans handled. Strategy: BestPlanSelector
2019-09-03 13:41:37,186  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 3 plans
2019-09-03 13:41:37,201  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:37,225  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:41:37,261  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:37,262  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 3 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:37,262  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 1 plans
2019-09-03 13:41:37,304  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:41:37,304  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:41:37,305  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:41:37,305  INFO ControlerListenerManagerImpl:213 [it.5] all ControlerReplanningListeners called.
2019-09-03 13:41:37,305  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:37,305  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:41:37,305  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:41:37,329  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:41:37,330  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:41:37,330  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:41:37,330  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:41:37,331  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:41:37,331  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:41:37,334  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:37,334  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:37,335  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:37,335  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:37,336  INFO EventsManagerImpl:156 
2019-09-03 13:41:37,336  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:37,336  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:41:37,336  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:41:37,336  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:41:37,337  INFO EventsManagerImpl:156 
2019-09-03 13:41:37,337  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:41:37,337  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:41:37,339  INFO ControlerListenerManagerImpl:232 [it.5] all ControlerBeforeMobsimListeners called.
2019-09-03 13:41:37,363  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:37,366  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:37,370  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:41:37,371  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:41:37,371  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:41:37,372  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:41:37,452  INFO Injector:80 === printInjector start ===
2019-09-03 13:41:37,453  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:41:37,454  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:41:37,454  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:41:37,456  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,459  INFO Injector:92 
2019-09-03 13:41:37,460  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:41:37,461  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7b5ba7b0}[Scopes.SINGLETON]
2019-09-03 13:41:37,462  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:41:37,464  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,465  INFO Injector:92 
2019-09-03 13:41:37,465  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:41:37,466  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@64e64c73[Scopes.SINGLETON]}
2019-09-03 13:41:37,466  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:41:37,466  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:41:37,466  INFO Injector:92 
2019-09-03 13:41:37,467  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:41:37,467  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1b914a43[Scopes.SINGLETON]
2019-09-03 13:41:37,468  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:41:37,468  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,468  INFO Injector:92 
2019-09-03 13:41:37,469  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:41:37,469  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@649bf3e0[Scopes.SINGLETON]
2019-09-03 13:41:37,470  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:41:37,470  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,470  INFO Injector:92 
2019-09-03 13:41:37,470  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:41:37,471  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2d2eee4[Scopes.SINGLETON]
2019-09-03 13:41:37,471  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:41:37,472  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,472  INFO Injector:92 
2019-09-03 13:41:37,472  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:41:37,473  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4733a9e3[Scopes.SINGLETON]
2019-09-03 13:41:37,473  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:41:37,473  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,475  INFO Injector:92 
2019-09-03 13:41:37,477  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:41:37,478  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@667946b5[Scopes.SINGLETON]
2019-09-03 13:41:37,478  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:41:37,478  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,479  INFO Injector:92 
2019-09-03 13:41:37,479  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:41:37,479  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1de54b39[Scopes.SINGLETON]
2019-09-03 13:41:37,479  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:41:37,479  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,480  INFO Injector:92 
2019-09-03 13:41:37,481  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:41:37,481  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@606ac5a8[Scopes.SINGLETON]
2019-09-03 13:41:37,482  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:41:37,485  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,488  INFO Injector:92 
2019-09-03 13:41:37,488  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:41:37,489  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@64e64c73[Scopes.SINGLETON]
2019-09-03 13:41:37,490  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:41:37,492  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:41:37,494  INFO Injector:92 
2019-09-03 13:41:37,495  INFO Injector:95 === printInjector end ===
2019-09-03 13:41:37,495  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:41:37,495  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:41:37,496  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:41:37,500  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:41:37,543  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:41:37,547  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=7 #nodes=28
2019-09-03 13:41:37,549  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=50 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:41:37,549  INFO Gbl:54 used RAM: 415116392B = 405387kB = 395MB  free: 246535064B = 235MB  total: 661651456B = 631MB
2019-09-03 13:41:37,816  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=21 #nodes=3
2019-09-03 13:41:37,817  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=31 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:37,817  INFO Gbl:54 used RAM: 424749696B = 414794kB = 405MB  free: 236901760B = 225MB  total: 661651456B = 631MB
2019-09-03 13:41:38,091  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=9 #nodes=0
2019-09-03 13:41:38,091  INFO QSim:506 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=11 lost=0 simT=7200.0s realT=0s; (s/r): Infinity
2019-09-03 13:41:38,091  INFO Gbl:54 used RAM: 431072856B = 420969kB = 411MB  free: 230578600B = 219MB  total: 661651456B = 631MB
2019-09-03 13:41:38,254  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.21875sec
2019-09-03 13:41:38,254  INFO AbstractController$8:215 ### ITERATION 5 fires after mobsim event
2019-09-03 13:41:38,255  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:41:38,259  INFO LegTimesControlerListener:50 [5] average trip (probably: leg) duration is: 4659 seconds = 01:17:39
2019-09-03 13:41:38,259  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:41:38,262  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:41:38,263  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:41:38,264  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:41:38,265  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=4867][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:41:38,266  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=24720][startTime=07:07:41][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:41:38,267  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:41:38,268  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:41:38,270  INFO ControlerListenerManagerImpl:251 [it.5] all ControlerAfterMobsimListeners called.
2019-09-03 13:41:38,270  INFO AbstractController$4:152 ### ITERATION 5 fires scoring event
2019-09-03 13:41:38,271  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:38,272  INFO NewScoreAssignerImpl:36 it: 5 msaStart: null
2019-09-03 13:41:38,272  INFO ControlerListenerManagerImpl:194 [it.5] all ControlerScoringListeners called.
2019-09-03 13:41:38,272  INFO AbstractController$5:160 ### ITERATION 5 fires iteration end event
2019-09-03 13:41:38,272  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:38,283  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:38,283  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:41:38,283  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:41:38,283  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:41:38,283  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:38,284  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:41:38,284  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:41:38,284  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:41:38,285  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:41:38,285  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:41:38,285  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:41:38,433  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:38,433  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 112.35007240445228
2019-09-03 13:41:38,433  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 112.34178582190297
2019-09-03 13:41:38,433  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 112.34630966849885
2019-09-03 13:41:38,433  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 112.35113073708264
2019-09-03 13:41:38,574  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:38,574  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:41:38,578  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:41:38,578  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 90254.87168305833
2019-09-03 13:41:38,578  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:41:38,578  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:41:38,715  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:41:38,731  INFO LegHistogramListener:72 number of legs:	53	100%
2019-09-03 13:41:38,731  INFO LegHistogramListener:79 number of car legs:	53	100.0%
2019-09-03 13:41:39,200  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:41:39,200  INFO ControlerListenerManagerImpl:171 [it.5] all ControlerIterationEndsListeners called.
2019-09-03 13:41:39,401  INFO AbstractController:170 ### ITERATION 5 ENDS
2019-09-03 13:41:39,401  INFO AbstractController:171 ###################################################
2019-09-03 13:41:39,401  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2019-09-03 13:41:39,402  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:41:39,402  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2019-09-03 13:41:39,406  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:41:39,407  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:41:39,408  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:41:39,414  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:41:39,421  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:41:39,429  INFO Counter:61 [PopulationWriter] dumped person # 32
2019-09-03 13:41:39,437  INFO PopulationWriter:139 Population written to: ./output/output_plans.xml.gz
2019-09-03 13:41:39,455  INFO Counter:67 [PopulationWriter] dumped person # 50
2019-09-03 13:41:39,464  INFO NetworkWriter:68 Writing network to file: ./output/output_network.xml.gz...
2019-09-03 13:41:41,128  INFO NetworkWriter:71 done.
2019-09-03 13:41:41,131  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-09-03 13:41:41,304  INFO VehicleWriterV1:55 Vehicles written to: ./output/output_vehicles.xml.gz
2019-09-03 13:41:41,308  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2019-09-03 13:41:41,315  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2019-09-03 13:41:41,315  INFO LanesWriter:74 writing to file: ./output/output_lanes.xml.gz
2019-09-03 13:41:41,592  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:41:41,603  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:41:41,619  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:41:41,628  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2019-09-03 13:41:41,628  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2019-09-03 13:41:41,628  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
