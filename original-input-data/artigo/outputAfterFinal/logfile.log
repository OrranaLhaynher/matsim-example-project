2019-09-03 13:37:18,499  INFO Gbl:59 JVM: 1.8.0_211; Oracle Corporation; mixed mode; 64-bit
2019-09-03 13:37:18,514  INFO Gbl:63 OS: Windows 10; 10.0; amd64
2019-09-03 13:37:18,518  INFO Gbl:66 CPU cores: 4
2019-09-03 13:37:18,522  INFO Gbl:67 max. Memory: 3556.0MB (3728736256B)
2019-09-03 13:37:18,533  INFO Gbl:105 MATSim-Build: r2e52cf1f54a31596d20f378d536f9dd7a0a860bb (2018-08-25 22:17:05)
2019-09-03 13:37:18,545  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:18,548  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:18,564 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:18,571  INFO NetworkImpl:167  node # 1
2019-09-03 13:37:18,571  INFO NetworkImpl:167  node # 4
2019-09-03 13:37:18,572  INFO NetworkImpl:167  node # 16
2019-09-03 13:37:18,577  INFO NetworkImpl:167  node # 64
2019-09-03 13:37:18,578  INFO NetworkImpl:167  node # 256
2019-09-03 13:37:18,601  INFO NetworkImpl:167  node # 1024
2019-09-03 13:37:18,614  INFO NetworkImpl:167  node # 4096
2019-09-03 13:37:18,630  INFO NetworkImpl:167  node # 16384
2019-09-03 13:37:18,634  INFO NetworkImpl:163  link # 1
2019-09-03 13:37:18,637  INFO NetworkImpl:163  link # 4
2019-09-03 13:37:18,642  INFO NetworkImpl:163  link # 16
2019-09-03 13:37:18,763  INFO NetworkImpl:163  link # 64
2019-09-03 13:37:18,769  INFO NetworkImpl:163  link # 256
2019-09-03 13:37:18,780  INFO NetworkImpl:163  link # 1024
2019-09-03 13:37:18,798  INFO NetworkImpl:163  link # 4096
2019-09-03 13:37:18,902  INFO NetworkImpl:163  link # 16384
2019-09-03 13:37:19,011  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:19,013  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2019-09-03 13:37:19,015  INFO ControlerUtils:58 config dump before iterations start
2019-09-03 13:37:19,020  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-09-03 13:37:19,065  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="5" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="./output" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="failIfDirectoryExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="EPSG:2782" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="artigo.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="mov" />
				<param name="closingTime" value="13:30:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="07:40:00" />
				<param name="minimalDuration" value="00:10:00" />
				<param name="openingTime" value="07:30:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="00:30:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="shelter" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="06:00:00" />
				<param name="openingTime" value="08:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="20:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="population_after.xml.gz" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="23:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="07:00:00" />
		<param name="startTime" value="06:00:00" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="BestScore" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
		<parameterset type="strategysettings" >
			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />
			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />
			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2019-09-03 13:37:19,115  INFO ControlerUtils:63 Complete config dump done.
2019-09-03 13:37:19,115  INFO ControlerUtils:64 Checking consistency of config...
2019-09-03 13:37:19,117  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2019-09-03 13:37:19,118  INFO ControlerUtils:66 Checking consistency of config done.
2019-09-03 13:37:19,154 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:19,171 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:19,193  INFO NetworkImpl:426 building QuadTree for nodes: xrange(443131.1248588478,570436.5846525345); yrange(9000.250507828903,158428.51607133824)
2019-09-03 13:37:19,370  INFO NetworkImpl:435 Building QuadTree took 0.183 seconds.
2019-09-03 13:37:20,041  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2019-09-03 13:37:20,074  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2019-09-03 13:37:20,204  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2019-09-03 13:37:20,287  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2019-09-03 13:37:20,386  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2019-09-03 13:37:20,908  INFO Counter:67 [PersonPrepareForSim] handled person # 27
2019-09-03 13:37:20,911  INFO Counter:61  vehicles # 1
2019-09-03 13:37:20,911  INFO Counter:61  vehicles # 2
2019-09-03 13:37:20,911  INFO Counter:61  vehicles # 4
2019-09-03 13:37:20,912  INFO Counter:61  vehicles # 8
2019-09-03 13:37:20,912  INFO Counter:61  vehicles # 16
2019-09-03 13:37:20,922  INFO AbstractController:126 ###################################################
2019-09-03 13:37:20,922  INFO AbstractController:127 ### ITERATION 0 BEGINS
2019-09-03 13:37:20,924  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:20,924  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:20,924  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:20,925  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:20,925  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:20,939  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2019-09-03 13:37:20,940  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:20,940  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:20,940  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:20,965  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:20,966  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:20,966  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:20,966  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:20,966  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:20,966  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:20,971  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:20,972  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:20,972  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:20,972  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:20,972  INFO EventsManagerImpl:156 
2019-09-03 13:37:20,973  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:20,973  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:20,975  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:20,975  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:20,975  INFO EventsManagerImpl:156 
2019-09-03 13:37:20,975  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:20,976  INFO PlansDumpingImpl:75 dumping plans...
2019-09-03 13:37:20,982  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:37:20,983  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:37:20,984  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:37:20,985  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:37:20,988  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:37:20,991  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.0/0.plans.xml.gz
2019-09-03 13:37:21,014  INFO Counter:67 [PopulationWriter] dumped person # 27
2019-09-03 13:37:21,014  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-03 13:37:21,014  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:21,015  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:21,114  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:21,115  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:21,116  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:21,116  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:21,117  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:21,127  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:21,349  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:21,349  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:21,353  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:21,353  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:21,354  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,354  INFO Injector:92 
2019-09-03 13:37:21,354  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:21,355  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@71812481}[Scopes.SINGLETON]
2019-09-03 13:37:21,355  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:21,355  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,356  INFO Injector:92 
2019-09-03 13:37:21,356  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:21,357  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3a5ecce3[Scopes.SINGLETON]}
2019-09-03 13:37:21,357  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:21,359  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:21,360  INFO Injector:92 
2019-09-03 13:37:21,361  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:21,371  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@21a21c64[Scopes.SINGLETON]
2019-09-03 13:37:21,371  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:21,373  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,373  INFO Injector:92 
2019-09-03 13:37:21,373  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:21,374  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@460ebd80[Scopes.SINGLETON]
2019-09-03 13:37:21,375  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:21,375  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,375  INFO Injector:92 
2019-09-03 13:37:21,377  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:21,378  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@40238dd0[Scopes.SINGLETON]
2019-09-03 13:37:21,378  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:21,378  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,379  INFO Injector:92 
2019-09-03 13:37:21,379  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:21,381  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2f1de2d6[Scopes.SINGLETON]
2019-09-03 13:37:21,381  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:21,382  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,382  INFO Injector:92 
2019-09-03 13:37:21,383  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:21,383  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5a18cd76[Scopes.SINGLETON]
2019-09-03 13:37:21,383  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:21,384  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,384  INFO Injector:92 
2019-09-03 13:37:21,384  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:21,386  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5143c662[Scopes.SINGLETON]
2019-09-03 13:37:21,403  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:21,406  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,410  INFO Injector:92 
2019-09-03 13:37:21,416  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:21,420  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@294a6b8e[Scopes.SINGLETON]
2019-09-03 13:37:21,420  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:21,424  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,429  INFO Injector:92 
2019-09-03 13:37:21,433  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:21,436  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3a5ecce3[Scopes.SINGLETON]
2019-09-03 13:37:21,437  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:21,438  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:21,438  INFO Injector:92 
2019-09-03 13:37:21,438  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:21,439  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:21,439  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:21,440  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:21,441  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:21,519  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:21,522  INFO EventsManagerImpl:134  event # 1
2019-09-03 13:37:21,539  INFO EventsManagerImpl:134  event # 4
2019-09-03 13:37:21,540  INFO EventsManagerImpl:134  event # 16
2019-09-03 13:37:21,545  INFO EventsManagerImpl:134  event # 64
2019-09-03 13:37:21,549  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:21,550  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:21,550  INFO Gbl:54 used RAM: 306017304B = 298845kB = 291MB  free: 293768168B = 280MB  total: 599785472B = 572MB
2019-09-03 13:37:21,570  INFO EventsManagerImpl:134  event # 256
2019-09-03 13:37:21,646  INFO EventsManagerImpl:134  event # 1024
2019-09-03 13:37:21,789  INFO EventsManagerImpl:134  event # 4096
2019-09-03 13:37:21,942  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:21,943  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:21,943  INFO Gbl:54 used RAM: 312099128B = 304784kB = 297MB  free: 287686344B = 274MB  total: 599785472B = 572MB
2019-09-03 13:37:22,169  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.171875sec
2019-09-03 13:37:22,170  INFO AbstractController$8:215 ### ITERATION 0 fires after mobsim event
2019-09-03 13:37:22,170  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:22,191  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:22,191  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:22,191  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:22,192  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:22,192  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:22,195  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:22,195  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:22,223  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:22,227  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:22,236  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:22,241  INFO AbstractController$4:152 ### ITERATION 0 fires scoring event
2019-09-03 13:37:22,241  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:22,246  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2019-09-03 13:37:22,248  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2019-09-03 13:37:22,253  INFO AbstractController$5:160 ### ITERATION 0 fires iteration end event
2019-09-03 13:37:22,260  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:22,288  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:22,288  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:22,289  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:22,289  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:22,290  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:22,295  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:22,298  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:22,303  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:22,306  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:22,311  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:22,314  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:22,319  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:22,323  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.8034846276054
2019-09-03 13:37:22,328  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.8034846276054
2019-09-03 13:37:22,331  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.8034846276054
2019-09-03 13:37:22,335  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.8034846276054
2019-09-03 13:37:22,339  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:22,341  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:22,369  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:22,370  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76939.73971329376
2019-09-03 13:37:22,370  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:22,370  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:22,371  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:22,401  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:22,405  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:23,405  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:23,406  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2019-09-03 13:37:24,053  INFO AbstractController:170 ### ITERATION 0 ENDS
2019-09-03 13:37:24,054  INFO AbstractController:171 ###################################################
2019-09-03 13:37:24,054  INFO AbstractController:126 ###################################################
2019-09-03 13:37:24,054  INFO AbstractController:127 ### ITERATION 1 BEGINS
2019-09-03 13:37:24,055  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:24,055  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:24,056  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:24,056  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:24,056  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:24,057  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2019-09-03 13:37:24,059  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:37:24,061 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:24,064 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:24,067 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:24,067 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:24,069  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 19 plans handled. Strategy: BestPlanSelector
2019-09-03 13:37:24,070  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 3 plans
2019-09-03 13:37:24,145  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:24,157  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:24,168  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:24,168  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 3 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:24,169  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:37:24,221  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:24,239  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:24,264  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:37:24,313  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:24,314  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:24,314  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2019-09-03 13:37:24,315  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:24,315  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:24,315  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:24,382  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:24,387  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:24,390  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:24,399  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:24,400  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:24,400  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:24,402  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:24,402  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:24,403  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:24,403  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:24,403  INFO EventsManagerImpl:156 
2019-09-03 13:37:24,404  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:24,404  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:24,404  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:24,406  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:24,406  INFO EventsManagerImpl:156 
2019-09-03 13:37:24,407  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:24,407  INFO PlansDumpingImpl:75 dumping plans...
2019-09-03 13:37:24,421  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:37:24,424  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:37:24,429  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:37:24,434  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:37:24,532  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:37:24,554  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.1/1.plans.xml.gz
2019-09-03 13:37:24,607  INFO Counter:67 [PopulationWriter] dumped person # 27
2019-09-03 13:37:24,610  INFO PlansDumpingImpl:92 finished plans dump.
2019-09-03 13:37:24,611  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:24,612  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:24,640  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:24,644  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:24,647  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:24,650  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:24,652  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:24,653  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:24,986  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:24,989  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:24,990  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:24,990  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:24,991  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:24,991  INFO Injector:92 
2019-09-03 13:37:24,992  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:24,993  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@8be5379}[Scopes.SINGLETON]
2019-09-03 13:37:24,994  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:24,999  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:24,999  INFO Injector:92 
2019-09-03 13:37:25,000  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:25,000  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4e370f52[Scopes.SINGLETON]}
2019-09-03 13:37:25,001  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:25,001  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:25,004  INFO Injector:92 
2019-09-03 13:37:25,006  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:25,008  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1bf00a6f[Scopes.SINGLETON]
2019-09-03 13:37:25,011  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:25,011  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,011  INFO Injector:92 
2019-09-03 13:37:25,012  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:25,012  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4d6f83a5[Scopes.SINGLETON]
2019-09-03 13:37:25,012  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:25,012  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,013  INFO Injector:92 
2019-09-03 13:37:25,013  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:25,014  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3a235a93[Scopes.SINGLETON]
2019-09-03 13:37:25,014  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:25,014  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,014  INFO Injector:92 
2019-09-03 13:37:25,015  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:25,016  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1e60d113[Scopes.SINGLETON]
2019-09-03 13:37:25,016  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:25,016  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,017  INFO Injector:92 
2019-09-03 13:37:25,036  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:25,037  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7ab7a4eb[Scopes.SINGLETON]
2019-09-03 13:37:25,038  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:25,039  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,039  INFO Injector:92 
2019-09-03 13:37:25,040  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:25,046  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@33bc7565[Scopes.SINGLETON]
2019-09-03 13:37:25,051  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:25,053  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,058  INFO Injector:92 
2019-09-03 13:37:25,063  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:25,067  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@550afff7[Scopes.SINGLETON]
2019-09-03 13:37:25,068  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:25,074  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,078  INFO Injector:92 
2019-09-03 13:37:25,079  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:25,083  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4e370f52[Scopes.SINGLETON]
2019-09-03 13:37:25,084  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:25,087  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:25,090  INFO Injector:92 
2019-09-03 13:37:25,094  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:25,099  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:25,099  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:25,100  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:25,102  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:25,211  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:25,241  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:25,241  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:25,241  INFO Gbl:54 used RAM: 294549240B = 287645kB = 280MB  free: 348227848B = 332MB  total: 642777088B = 613MB
2019-09-03 13:37:25,458  INFO EventsManagerImpl:134  event # 16384
2019-09-03 13:37:25,579  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:25,580  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:25,580  INFO Gbl:54 used RAM: 302853880B = 295755kB = 288MB  free: 339923208B = 324MB  total: 642777088B = 613MB
2019-09-03 13:37:25,853  INFO AbstractController$8:215 ### ITERATION 1 fires after mobsim event
2019-09-03 13:37:25,854  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:25,853  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.203125sec
2019-09-03 13:37:25,882  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:25,883  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:25,884  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:25,884  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:25,884  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:25,886  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:25,886  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:25,887  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:25,889  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:25,889  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:25,890  INFO AbstractController$4:152 ### ITERATION 1 fires scoring event
2019-09-03 13:37:25,890  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:25,897  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2019-09-03 13:37:25,898  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2019-09-03 13:37:25,899  INFO AbstractController$5:160 ### ITERATION 1 fires iteration end event
2019-09-03 13:37:25,900  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:25,915  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:25,916  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:25,916  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:25,916  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:25,916  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:25,917  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:25,918  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:25,918  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:25,922  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:25,924  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:25,924  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:26,226  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:26,227  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.8036288790547
2019-09-03 13:37:26,227  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.80291628753425
2019-09-03 13:37:26,228  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.80355675333006
2019-09-03 13:37:26,228  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.80419721912585
2019-09-03 13:37:26,597  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:26,598  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:26,603  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:26,603  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76940.13581039032
2019-09-03 13:37:26,604  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:26,604  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:26,845  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:26,856  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:26,856  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:27,628  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:27,628  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2019-09-03 13:37:28,056  INFO AbstractController:170 ### ITERATION 1 ENDS
2019-09-03 13:37:28,060  INFO AbstractController:171 ###################################################
2019-09-03 13:37:28,060  INFO AbstractController:126 ###################################################
2019-09-03 13:37:28,060  INFO AbstractController:127 ### ITERATION 2 BEGINS
2019-09-03 13:37:28,061  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:28,061  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:28,062  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:28,064  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:28,064  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:28,068  INFO ControlerListenerManagerImpl:148 [it.2] all ControlerIterationStartsListeners called.
2019-09-03 13:37:28,069  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:37:28,069 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:28,071 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:28,074 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:28,077 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:28,084  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 22 plans handled. Strategy: BestPlanSelector
2019-09-03 13:37:28,084  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 2 plans
2019-09-03 13:37:28,154  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:28,157  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:28,157  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:28,157  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 2 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:28,158  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 3 plans
2019-09-03 13:37:28,195  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:28,215  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:28,221  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:28,222  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 3 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:28,222  INFO ControlerListenerManagerImpl:213 [it.2] all ControlerReplanningListeners called.
2019-09-03 13:37:28,222  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:28,222  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:28,223  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:28,267  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:28,267  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:28,268  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:28,268  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:28,268  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:28,268  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:28,271  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:28,271  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:28,271  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:28,271  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:28,271  INFO EventsManagerImpl:156 
2019-09-03 13:37:28,271  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:28,271  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:28,272  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:28,272  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:28,272  INFO EventsManagerImpl:156 
2019-09-03 13:37:28,272  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:28,273  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:28,274  INFO ControlerListenerManagerImpl:232 [it.2] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:28,301  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:28,304  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:28,306  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:28,311  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:28,314  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:28,337  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:28,530  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:28,533  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:28,535  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:28,535  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:28,536  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,536  INFO Injector:92 
2019-09-03 13:37:28,537  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:28,537  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3893de24}[Scopes.SINGLETON]
2019-09-03 13:37:28,537  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:28,538  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,539  INFO Injector:92 
2019-09-03 13:37:28,540  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:28,540  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7606579[Scopes.SINGLETON]}
2019-09-03 13:37:28,542  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:28,544  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:28,545  INFO Injector:92 
2019-09-03 13:37:28,545  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:28,546  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@21280b00[Scopes.SINGLETON]
2019-09-03 13:37:28,548  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:28,548  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,548  INFO Injector:92 
2019-09-03 13:37:28,548  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:28,551  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@568a79d1[Scopes.SINGLETON]
2019-09-03 13:37:28,551  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:28,554  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,557  INFO Injector:92 
2019-09-03 13:37:28,558  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:28,562  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1a38040[Scopes.SINGLETON]
2019-09-03 13:37:28,563  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:28,563  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,563  INFO Injector:92 
2019-09-03 13:37:28,563  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:28,565  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@397e533e[Scopes.SINGLETON]
2019-09-03 13:37:28,567  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:28,568  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,568  INFO Injector:92 
2019-09-03 13:37:28,568  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:28,569  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@9f52c05[Scopes.SINGLETON]
2019-09-03 13:37:28,569  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:28,569  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,570  INFO Injector:92 
2019-09-03 13:37:28,570  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:28,571  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@17127770[Scopes.SINGLETON]
2019-09-03 13:37:28,571  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:28,572  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,573  INFO Injector:92 
2019-09-03 13:37:28,573  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:28,578  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3e5e2f13[Scopes.SINGLETON]
2019-09-03 13:37:28,581  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:28,582  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,582  INFO Injector:92 
2019-09-03 13:37:28,585  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:28,588  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7606579[Scopes.SINGLETON]
2019-09-03 13:37:28,590  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:28,594  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:28,596  INFO Injector:92 
2019-09-03 13:37:28,599  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:28,601  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:28,604  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:28,607  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:28,610  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:28,688  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:28,740  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:28,743  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:28,745  INFO Gbl:54 used RAM: 286357992B = 279646kB = 273MB  free: 364283416B = 347MB  total: 650641408B = 620MB
2019-09-03 13:37:29,040  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:29,040  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:29,041  INFO Gbl:54 used RAM: 295105216B = 288188kB = 281MB  free: 355536192B = 339MB  total: 650641408B = 620MB
2019-09-03 13:37:29,242  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.15625sec
2019-09-03 13:37:29,243  INFO AbstractController$8:215 ### ITERATION 2 fires after mobsim event
2019-09-03 13:37:29,244  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:29,268  INFO LegTimesControlerListener:50 [2] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:29,269  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:29,269  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:29,270  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:29,270  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:29,271  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:29,271  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:29,271  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:29,271  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:29,272  INFO ControlerListenerManagerImpl:251 [it.2] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:29,273  INFO AbstractController$4:152 ### ITERATION 2 fires scoring event
2019-09-03 13:37:29,273  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:29,273  INFO NewScoreAssignerImpl:36 it: 2 msaStart: null
2019-09-03 13:37:29,274  INFO ControlerListenerManagerImpl:194 [it.2] all ControlerScoringListeners called.
2019-09-03 13:37:29,280  INFO AbstractController$5:160 ### ITERATION 2 fires iteration end event
2019-09-03 13:37:29,281  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:29,299  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:29,301  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:29,301  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:29,301  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:29,302  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:29,302  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:29,302  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:29,302  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:29,303  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:29,304  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:29,304  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:29,499  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:29,499  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.80391532300725
2019-09-03 13:37:29,500  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.80277457633548
2019-09-03 13:37:29,500  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.80346253357737
2019-09-03 13:37:29,500  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.80419721912585
2019-09-03 13:37:29,643  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:29,646  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:29,669  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:29,669  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76923.87093651452
2019-09-03 13:37:29,669  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:29,669  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:29,823  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:29,853  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:29,853  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:30,406  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:30,406  INFO ControlerListenerManagerImpl:171 [it.2] all ControlerIterationEndsListeners called.
2019-09-03 13:37:30,791  INFO AbstractController:170 ### ITERATION 2 ENDS
2019-09-03 13:37:30,791  INFO AbstractController:171 ###################################################
2019-09-03 13:37:30,791  INFO AbstractController:126 ###################################################
2019-09-03 13:37:30,791  INFO AbstractController:127 ### ITERATION 3 BEGINS
2019-09-03 13:37:30,792  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:30,792  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:30,793  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:30,795  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:30,795  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:30,795  INFO ControlerListenerManagerImpl:148 [it.3] all ControlerIterationStartsListeners called.
2019-09-03 13:37:30,795  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:37:30,796 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:30,796 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:30,797 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:30,798 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:30,799  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 21 plans handled. Strategy: BestPlanSelector
2019-09-03 13:37:30,799  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:37:30,882  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:30,929  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:30,970  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:37:30,982  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:30,983  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:30,983  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 1 plans
2019-09-03 13:37:31,006  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:31,006  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:31,006  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:31,006  INFO ControlerListenerManagerImpl:213 [it.3] all ControlerReplanningListeners called.
2019-09-03 13:37:31,007  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:31,007  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:31,007  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:31,039  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:31,039  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:31,041  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:31,043  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:31,043  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:31,044  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:31,048  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:31,048  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:31,048  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:31,049  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:31,049  INFO EventsManagerImpl:156 
2019-09-03 13:37:31,049  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:31,049  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:31,050  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:31,050  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:31,050  INFO EventsManagerImpl:156 
2019-09-03 13:37:31,051  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:31,051  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:31,051  INFO ControlerListenerManagerImpl:232 [it.3] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:31,063  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:31,063  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:31,064  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:31,064  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:31,066  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:31,066  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:31,200  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:31,201  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:31,201  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:31,201  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:31,202  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,202  INFO Injector:92 
2019-09-03 13:37:31,202  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:31,202  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@783c0a9d}[Scopes.SINGLETON]
2019-09-03 13:37:31,203  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:31,203  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,203  INFO Injector:92 
2019-09-03 13:37:31,204  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:31,204  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@16b3b292[Scopes.SINGLETON]}
2019-09-03 13:37:31,204  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:31,204  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:31,205  INFO Injector:92 
2019-09-03 13:37:31,205  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:31,205  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1c036772[Scopes.SINGLETON]
2019-09-03 13:37:31,205  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:31,205  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,205  INFO Injector:92 
2019-09-03 13:37:31,205  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:31,209  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@246ba501[Scopes.SINGLETON]
2019-09-03 13:37:31,211  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:31,213  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,214  INFO Injector:92 
2019-09-03 13:37:31,214  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:31,214  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4c0bf80d[Scopes.SINGLETON]
2019-09-03 13:37:31,237  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:31,240  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,246  INFO Injector:92 
2019-09-03 13:37:31,249  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:31,250  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@ff13f3[Scopes.SINGLETON]
2019-09-03 13:37:31,250  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:31,251  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,252  INFO Injector:92 
2019-09-03 13:37:31,252  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:31,255  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@370c1ea2[Scopes.SINGLETON]
2019-09-03 13:37:31,257  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:31,257  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,258  INFO Injector:92 
2019-09-03 13:37:31,258  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:31,259  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@13003b60[Scopes.SINGLETON]
2019-09-03 13:37:31,262  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:31,262  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,263  INFO Injector:92 
2019-09-03 13:37:31,263  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:31,264  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1c9db049[Scopes.SINGLETON]
2019-09-03 13:37:31,264  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:31,265  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,265  INFO Injector:92 
2019-09-03 13:37:31,266  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:31,266  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@16b3b292[Scopes.SINGLETON]
2019-09-03 13:37:31,267  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:31,267  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:31,267  INFO Injector:92 
2019-09-03 13:37:31,268  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:31,268  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:31,269  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:31,269  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:31,269  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:31,353  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:31,388  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:31,388  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:31,389  INFO Gbl:54 used RAM: 436870576B = 426631kB = 416MB  free: 213770832B = 203MB  total: 650641408B = 620MB
2019-09-03 13:37:31,677  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:31,678  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:31,678  INFO Gbl:54 used RAM: 445613000B = 435168kB = 424MB  free: 205028408B = 195MB  total: 650641408B = 620MB
2019-09-03 13:37:31,958  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.140625sec
2019-09-03 13:37:31,958  INFO AbstractController$8:215 ### ITERATION 3 fires after mobsim event
2019-09-03 13:37:31,959  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:31,980  INFO LegTimesControlerListener:50 [3] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:31,980  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:31,981  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:31,981  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:31,981  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:31,981  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:31,981  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:31,982  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:31,982  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:31,982  INFO ControlerListenerManagerImpl:251 [it.3] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:31,982  INFO AbstractController$4:152 ### ITERATION 3 fires scoring event
2019-09-03 13:37:31,983  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:31,983  INFO NewScoreAssignerImpl:36 it: 3 msaStart: null
2019-09-03 13:37:31,983  INFO ControlerListenerManagerImpl:194 [it.3] all ControlerScoringListeners called.
2019-09-03 13:37:31,983  INFO AbstractController$5:160 ### ITERATION 3 fires iteration end event
2019-09-03 13:37:31,983  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:31,994  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:31,994  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:31,994  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:31,995  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:31,995  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:31,995  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:31,995  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:31,995  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:31,996  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:31,996  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:31,996  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:32,280  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:32,280  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.80350542226459
2019-09-03 13:37:32,281  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.80265111954537
2019-09-03 13:37:32,281  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.80330608183712
2019-09-03 13:37:32,281  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.80419721912585
2019-09-03 13:37:32,402  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:32,403  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:32,406  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:32,406  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76946.00076292476
2019-09-03 13:37:32,407  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:32,407  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:32,609  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:32,621  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:32,622  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:32,947  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:32,947  INFO ControlerListenerManagerImpl:171 [it.3] all ControlerIterationEndsListeners called.
2019-09-03 13:37:33,143  INFO AbstractController:170 ### ITERATION 3 ENDS
2019-09-03 13:37:33,144  INFO AbstractController:171 ###################################################
2019-09-03 13:37:33,144  INFO AbstractController:126 ###################################################
2019-09-03 13:37:33,144  INFO AbstractController:127 ### ITERATION 4 BEGINS
2019-09-03 13:37:33,146  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:33,149  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:33,150  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:33,150  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:33,150  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:33,151  INFO ControlerListenerManagerImpl:148 [it.4] all ControlerIterationStartsListeners called.
2019-09-03 13:37:33,151  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:37:33,152 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:33,153 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:33,154 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:33,157 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:33,164  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 20 plans handled. Strategy: BestPlanSelector
2019-09-03 13:37:33,164  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 5 plans
2019-09-03 13:37:33,213  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:33,231  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:33,256  INFO Counter:61 [PlanRouter] handled plan # 4
2019-09-03 13:37:33,269  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:33,269  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 5 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:33,269  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 2 plans
2019-09-03 13:37:33,295  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:33,312  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:33,313  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:33,313  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 2 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:33,313  INFO ControlerListenerManagerImpl:213 [it.4] all ControlerReplanningListeners called.
2019-09-03 13:37:33,313  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:33,313  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:33,313  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:33,345  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:33,345  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:33,349  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:33,350  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:33,350  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:33,351  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:33,356  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:33,356  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:33,356  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:33,357  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:33,357  INFO EventsManagerImpl:156 
2019-09-03 13:37:33,357  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:33,357  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:33,357  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:33,358  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:33,358  INFO EventsManagerImpl:156 
2019-09-03 13:37:33,358  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:33,358  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:33,358  INFO ControlerListenerManagerImpl:232 [it.4] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:33,371  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:33,372  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:33,372  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:33,372  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:33,373  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:33,374  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:33,467  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:33,467  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:33,467  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:33,468  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:33,468  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,468  INFO Injector:92 
2019-09-03 13:37:33,468  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:33,469  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7a41f225}[Scopes.SINGLETON]
2019-09-03 13:37:33,472  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:33,472  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,473  INFO Injector:92 
2019-09-03 13:37:33,473  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:33,474  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@15c5d8f8[Scopes.SINGLETON]}
2019-09-03 13:37:33,475  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:33,476  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:33,478  INFO Injector:92 
2019-09-03 13:37:33,479  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:33,479  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@32880879[Scopes.SINGLETON]
2019-09-03 13:37:33,480  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:33,480  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,483  INFO Injector:92 
2019-09-03 13:37:33,484  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:33,484  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1fc79345[Scopes.SINGLETON]
2019-09-03 13:37:33,484  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:33,485  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,485  INFO Injector:92 
2019-09-03 13:37:33,485  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:33,486  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4103517[Scopes.SINGLETON]
2019-09-03 13:37:33,486  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:33,486  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,487  INFO Injector:92 
2019-09-03 13:37:33,489  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:33,490  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7792d57a[Scopes.SINGLETON]
2019-09-03 13:37:33,490  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:33,491  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,495  INFO Injector:92 
2019-09-03 13:37:33,495  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:33,496  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@883a13f[Scopes.SINGLETON]
2019-09-03 13:37:33,496  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:33,496  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,497  INFO Injector:92 
2019-09-03 13:37:33,497  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:33,497  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@42bf56ac[Scopes.SINGLETON]
2019-09-03 13:37:33,497  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:33,497  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,506  INFO Injector:92 
2019-09-03 13:37:33,507  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:33,507  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@55a04a39[Scopes.SINGLETON]
2019-09-03 13:37:33,507  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:33,508  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,508  INFO Injector:92 
2019-09-03 13:37:33,511  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:33,512  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@15c5d8f8[Scopes.SINGLETON]
2019-09-03 13:37:33,513  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:33,513  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:33,514  INFO Injector:92 
2019-09-03 13:37:33,514  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:33,515  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:33,515  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:33,516  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:33,516  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:33,569  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:33,591  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:33,592  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:33,593  INFO Gbl:54 used RAM: 407674216B = 398119kB = 388MB  free: 245588632B = 234MB  total: 653262848B = 623MB
2019-09-03 13:37:33,896  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:33,896  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:33,896  INFO Gbl:54 used RAM: 412589592B = 402919kB = 393MB  free: 240673256B = 229MB  total: 653262848B = 623MB
2019-09-03 13:37:34,123  INFO AbstractController$8:215 ### ITERATION 4 fires after mobsim event
2019-09-03 13:37:34,123  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.109375sec
2019-09-03 13:37:34,123  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:34,140  INFO LegTimesControlerListener:50 [4] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:34,140  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:34,140  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:34,140  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:34,140  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:34,141  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:34,141  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:34,141  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:34,141  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:34,141  INFO ControlerListenerManagerImpl:251 [it.4] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:34,142  INFO AbstractController$4:152 ### ITERATION 4 fires scoring event
2019-09-03 13:37:34,142  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:34,143  INFO NewScoreAssignerImpl:36 it: 4 msaStart: null
2019-09-03 13:37:34,144  INFO ControlerListenerManagerImpl:194 [it.4] all ControlerScoringListeners called.
2019-09-03 13:37:34,144  INFO AbstractController$5:160 ### ITERATION 4 fires iteration end event
2019-09-03 13:37:34,144  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:34,153  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:34,153  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:34,153  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:34,153  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:34,154  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:34,154  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:34,154  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:34,155  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:34,155  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:34,155  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:34,155  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:34,421  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:34,421  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.80391532300725
2019-09-03 13:37:34,422  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.80265111954537
2019-09-03 13:37:34,422  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.80327078122731
2019-09-03 13:37:34,422  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.80419721912585
2019-09-03 13:37:34,781  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:34,781  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:34,818  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:34,819  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76924.17299116935
2019-09-03 13:37:34,819  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:34,819  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:34,991  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:35,034  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:35,034  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:35,636  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:35,636  INFO ControlerListenerManagerImpl:171 [it.4] all ControlerIterationEndsListeners called.
2019-09-03 13:37:35,903  INFO AbstractController:170 ### ITERATION 4 ENDS
2019-09-03 13:37:35,904  INFO AbstractController:171 ###################################################
2019-09-03 13:37:35,904  INFO AbstractController:126 ###################################################
2019-09-03 13:37:35,905  INFO AbstractController:127 ### ITERATION 5 BEGINS
2019-09-03 13:37:35,907  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:35,907  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:35,907  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2019-09-03 13:37:35,908  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2019-09-03 13:37:35,908  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2019-09-03 13:37:35,910  INFO ControlerListenerManagerImpl:148 [it.5] all ControlerIterationStartsListeners called.
2019-09-03 13:37:35,911  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2019-09-03 13:37:35,911 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:35,914 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:35,914 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:35,917 DEBUG NetworkRoutingProvider:75 requesting network routing module with routingMode=car;	mode=car
2019-09-03 13:37:35,920  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 24 plans handled. Strategy: BestPlanSelector
2019-09-03 13:37:35,921  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 2 plans
2019-09-03 13:37:36,001  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:36,025  INFO Counter:61 [PlanRouter] handled plan # 2
2019-09-03 13:37:36,025  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:36,026  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 2 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:36,027  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 1 plans
2019-09-03 13:37:36,084  INFO Counter:61 [PlanRouter] handled plan # 1
2019-09-03 13:37:36,086  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2019-09-03 13:37:36,086  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 1 plans handled. Strategy: RandomPlanSelector_ReRoute
2019-09-03 13:37:36,087  INFO ControlerListenerManagerImpl:213 [it.5] all ControlerReplanningListeners called.
2019-09-03 13:37:36,087  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:36,087  INFO EventsManagerImpl:170 resetting Event-Handlers
2019-09-03 13:37:36,087  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2019-09-03 13:37:36,117  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2019-09-03 13:37:36,117  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2019-09-03 13:37:36,117  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2019-09-03 13:37:36,118  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2019-09-03 13:37:36,118  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2019-09-03 13:37:36,118  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2019-09-03 13:37:36,120  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:36,120  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:36,120  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:36,120  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:36,120  INFO EventsManagerImpl:156 
2019-09-03 13:37:36,121  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:36,121  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2019-09-03 13:37:36,121  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2019-09-03 13:37:36,121  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2019-09-03 13:37:36,121  INFO EventsManagerImpl:156 
2019-09-03 13:37:36,121  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2019-09-03 13:37:36,131  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2019-09-03 13:37:36,132  INFO ControlerListenerManagerImpl:232 [it.5] all ControlerBeforeMobsimListeners called.
2019-09-03 13:37:36,156  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:36,163  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2019-09-03 13:37:36,164  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:36,164  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2019-09-03 13:37:36,165  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2019-09-03 13:37:36,166  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2019-09-03 13:37:36,298  INFO Injector:80 === printInjector start ===
2019-09-03 13:37:36,300  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2019-09-03 13:37:36,300  INFO Injector:85   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2019-09-03 13:37:36,305  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2019-09-03 13:37:36,310  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,310  INFO Injector:92 
2019-09-03 13:37:36,311  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2019-09-03 13:37:36,312  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5d8872a0}[Scopes.SINGLETON]
2019-09-03 13:37:36,312  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2019-09-03 13:37:36,314  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,315  INFO Injector:92 
2019-09-03 13:37:36,315  INFO Injector:84 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2019-09-03 13:37:36,316  INFO Injector:85   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4d7a646d[Scopes.SINGLETON]}
2019-09-03 13:37:36,316  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2019-09-03 13:37:36,316  INFO Injector:88   --> scope: Scopes.NO_SCOPE
2019-09-03 13:37:36,316  INFO Injector:92 
2019-09-03 13:37:36,317  INFO Injector:84 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2019-09-03 13:37:36,317  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@73df7bd[Scopes.SINGLETON]
2019-09-03 13:37:36,318  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2019-09-03 13:37:36,331  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,334  INFO Injector:92 
2019-09-03 13:37:36,334  INFO Injector:84 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2019-09-03 13:37:36,335  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4e58bd74[Scopes.SINGLETON]
2019-09-03 13:37:36,335  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2019-09-03 13:37:36,335  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,336  INFO Injector:92 
2019-09-03 13:37:36,336  INFO Injector:84 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2019-09-03 13:37:36,337  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2291b211[Scopes.SINGLETON]
2019-09-03 13:37:36,337  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2019-09-03 13:37:36,338  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,343  INFO Injector:92 
2019-09-03 13:37:36,344  INFO Injector:84 org.matsim.core.mobsim.qsim.ActivityEngine 
2019-09-03 13:37:36,347  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@45e9269c[Scopes.SINGLETON]
2019-09-03 13:37:36,347  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2019-09-03 13:37:36,347  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,347  INFO Injector:92 
2019-09-03 13:37:36,348  INFO Injector:84 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2019-09-03 13:37:36,348  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@57ffe139[Scopes.SINGLETON]
2019-09-03 13:37:36,349  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2019-09-03 13:37:36,349  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,351  INFO Injector:92 
2019-09-03 13:37:36,351  INFO Injector:84 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2019-09-03 13:37:36,352  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1d20169d[Scopes.SINGLETON]
2019-09-03 13:37:36,352  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2019-09-03 13:37:36,352  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,353  INFO Injector:92 
2019-09-03 13:37:36,353  INFO Injector:84 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2019-09-03 13:37:36,354  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@451ba5aa[Scopes.SINGLETON]
2019-09-03 13:37:36,354  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2019-09-03 13:37:36,354  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,354  INFO Injector:92 
2019-09-03 13:37:36,355  INFO Injector:84 org.matsim.core.mobsim.qsim.QSim 
2019-09-03 13:37:36,355  INFO Injector:85   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4d7a646d[Scopes.SINGLETON]
2019-09-03 13:37:36,356  INFO Injector:86   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2019-09-03 13:37:36,357  INFO Injector:88   --> scope: eager singleton
2019-09-03 13:37:36,357  INFO Injector:92 
2019-09-03 13:37:36,357  INFO Injector:95 === printInjector end ===
2019-09-03 13:37:36,358  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2019-09-03 13:37:36,358  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2019-09-03 13:37:36,360  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2019-09-03 13:37:36,361  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2019-09-03 13:37:36,403  INFO QNetsimEngine:504 Assigned 18088 nodes and 42206 links to QSimEngineRunner #0
2019-09-03 13:37:36,429  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=4 #nodes=22
2019-09-03 13:37:36,429  INFO QSim:506 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=27 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2019-09-03 13:37:36,429  INFO Gbl:54 used RAM: 310589880B = 303310kB = 296MB  free: 350537288B = 334MB  total: 661127168B = 630MB
2019-09-03 13:37:36,674  INFO QNetsimEngine:347 SIMULATION (QNetsimEngine) AT 08:00:00 : #links=12 #nodes=1
2019-09-03 13:37:36,674  INFO QSim:506 SIMULATION (NEW QSim) AT 08:00:00 : #Veh=13 lost=0 simT=3600.0s realT=0s; (s/r): Infinity
2019-09-03 13:37:36,674  INFO Gbl:54 used RAM: 315806776B = 308405kB = 301MB  free: 345320392B = 329MB  total: 661127168B = 630MB
2019-09-03 13:37:36,910  INFO Gbl:187 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=0.140625sec
2019-09-03 13:37:36,910  INFO AbstractController$8:215 ### ITERATION 5 fires after mobsim event
2019-09-03 13:37:36,910  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2019-09-03 13:37:36,948  INFO LegTimesControlerListener:50 [5] average trip (probably: leg) duration is: 3927 seconds = 01:05:27
2019-09-03 13:37:36,949  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2019-09-03 13:37:36,949  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2019-09-03 13:37:36,949  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2019-09-03 13:37:36,949  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2019-09-03 13:37:36,950  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=6413][startTime=undefined][endTime=07:00:00][duration=undefined][facilityId=null]
2019-09-03 13:37:36,950  WARN CharyparNagelActivityScoring:256 last activity: [type=shelter][coord=null][linkId=15668][startTime=08:30:21][endTime=undefined][duration=undefined][facilityId=null]
2019-09-03 13:37:36,950  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2019-09-03 13:37:36,950  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2019-09-03 13:37:36,951  INFO ControlerListenerManagerImpl:251 [it.5] all ControlerAfterMobsimListeners called.
2019-09-03 13:37:36,952  INFO AbstractController$4:152 ### ITERATION 5 fires scoring event
2019-09-03 13:37:36,952  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:36,952  INFO NewScoreAssignerImpl:36 it: 5 msaStart: null
2019-09-03 13:37:36,953  INFO ControlerListenerManagerImpl:194 [it.5] all ControlerScoringListeners called.
2019-09-03 13:37:36,953  INFO AbstractController$5:160 ### ITERATION 5 fires iteration end event
2019-09-03 13:37:36,953  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:36,973  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:36,973  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2019-09-03 13:37:36,973  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2019-09-03 13:37:36,974  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2019-09-03 13:37:36,974  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:36,976  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2019-09-03 13:37:36,977  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2019-09-03 13:37:36,978  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2019-09-03 13:37:36,978  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2019-09-03 13:37:36,978  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2019-09-03 13:37:36,978  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2019-09-03 13:37:37,281  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:37,284  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 117.80328980412614
2019-09-03 13:37:37,284  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 117.80174370454563
2019-09-03 13:37:37,284  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 117.80281707372745
2019-09-03 13:37:37,285  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 117.80419721912585
2019-09-03 13:37:37,520  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:37,520  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2019-09-03 13:37:37,587  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2019-09-03 13:37:37,587  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 76945.6125915809
2019-09-03 13:37:37,587  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2019-09-03 13:37:37,587  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2019-09-03 13:37:37,872  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2019-09-03 13:37:37,955  INFO LegHistogramListener:72 number of legs:	27	100%
2019-09-03 13:37:37,956  INFO LegHistogramListener:79 number of car legs:	27	100.0%
2019-09-03 13:37:38,600  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2019-09-03 13:37:38,600  INFO ControlerListenerManagerImpl:171 [it.5] all ControlerIterationEndsListeners called.
2019-09-03 13:37:38,904  INFO AbstractController:170 ### ITERATION 5 ENDS
2019-09-03 13:37:38,908  INFO AbstractController:171 ###################################################
2019-09-03 13:37:38,909  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2019-09-03 13:37:38,910  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2019-09-03 13:37:38,910  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2019-09-03 13:37:38,915  INFO Counter:61 [PopulationWriter] dumped person # 1
2019-09-03 13:37:38,915  INFO Counter:61 [PopulationWriter] dumped person # 2
2019-09-03 13:37:38,916  INFO Counter:61 [PopulationWriter] dumped person # 4
2019-09-03 13:37:38,919  INFO Counter:61 [PopulationWriter] dumped person # 8
2019-09-03 13:37:38,924  INFO Counter:61 [PopulationWriter] dumped person # 16
2019-09-03 13:37:38,930  INFO PopulationWriter:139 Population written to: ./output/output_plans.xml.gz
2019-09-03 13:37:39,004  INFO Counter:67 [PopulationWriter] dumped person # 27
2019-09-03 13:37:39,024  INFO NetworkWriter:68 Writing network to file: ./output/output_network.xml.gz...
2019-09-03 13:37:40,929  INFO NetworkWriter:71 done.
2019-09-03 13:37:40,930  INFO Config:561 setting context to [file:/C:/Users/orran/OneDrive/Documentos/GitHub/matsim-example-project/original-input-data/artigo/]
2019-09-03 13:37:41,042  INFO VehicleWriterV1:55 Vehicles written to: ./output/output_vehicles.xml.gz
2019-09-03 13:37:41,055  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2019-09-03 13:37:41,077  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2019-09-03 13:37:41,078  INFO LanesWriter:74 writing to file: ./output/output_lanes.xml.gz
2019-09-03 13:37:41,681  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2019-09-03 13:37:41,705  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2019-09-03 13:37:41,740  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2019-09-03 13:37:41,771  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2019-09-03 13:37:41,774  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2019-09-03 13:37:41,778  INFO OutputDirectoryLogging:146 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
